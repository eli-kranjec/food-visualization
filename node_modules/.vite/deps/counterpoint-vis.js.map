{
  "version": 3,
  "sources": ["../../counterpoint-vis/dist/counterpoint-vis.es.js"],
  "sourcesContent": ["var gi = Object.defineProperty;\nvar pi = (i, t, e) => t in i ? gi(i, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : i[t] = e;\nvar Lt = (i, t, e) => (pi(i, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nfunction K(i, t) {\n  return typeof i == \"number\" && typeof t == \"number\" ? Math.abs(i - t) <= 1e-3 : i == t;\n}\nfunction Re() {\n  var i = 0;\n  return Object.assign(function() {\n    return i;\n  }, {\n    advance: (e) => {\n      i += e;\n    }\n  });\n}\nfunction _i(i) {\n  let t = /* @__PURE__ */ new Set();\n  for (; i = Reflect.getPrototypeOf(i); )\n    Reflect.ownKeys(i).forEach((r) => t.add(r));\n  return t;\n}\nclass yi {\n  constructor(t = void 0) {\n    this.info = t, this.promise = new Promise((e, r) => {\n      this.reject = r, this.resolve = e;\n    });\n  }\n}\nfunction bi(i) {\n  let t = 1e12, e = -1e12, r = 1e12, a = -1e12;\n  return i.forEach((s) => {\n    s.x < t && (t = s.x), s.x > e && (e = s.x), s.y < r && (r = s.y), s.y > a && (a = s.y);\n  }), { x: [t, e], y: [r, a] };\n}\nvar Mi = /* @__PURE__ */ ((i) => (i[i.DEFAULT = 0] = \"DEFAULT\", i[i.ALWAYS = 1] = \"ALWAYS\", i[i.WHEN_UPDATED = 2] = \"WHEN_UPDATED\", i))(Mi || {});\nclass M {\n  /**\n   *\n   * @param info Arguments describing how to populate the attribute, or a single\n   *    value that should be stored as the `value` or `valueFn` of the attribute.\n   */\n  constructor(t) {\n    if (this.valueFn = void 0, this.transform = void 0, this.cacheTransform = !1, this._cachedValue = null, this.computeArg = void 0, this.recompute = 0, this.needsUpdate = !1, this.animation = null, this.label = null, this._computedValue = null, this._lastTickValue = void 0, this._animatedValue = null, this._hasComputed = !1, this._timeProvider = null, this.currentTime = 0, this._changedLastTick = !1, this._preload = !1, this._listeners = [], this._animationCompleteCallbacks = [], this._animationCompleteTimeout = null, t == null || t == null || !(t.hasOwnProperty(\"value\") || t.hasOwnProperty(\"valueFn\")))\n      typeof t == \"function\" ? this.valueFn = t : this.value = t;\n    else {\n      let e = t;\n      e.valueFn !== void 0 ? this.valueFn = e.valueFn : e.value !== void 0 ? this.value = e.value : console.error(\n        \"One of `value` or `valueFn` must be defined to create an Attribute\"\n      ), this.transform = e.transform ?? null, this.cacheTransform = e.cacheTransform ?? !1, this._cachedValue = null, this.computeArg = e.computeArg ?? null, this.recompute = e.recompute ?? 0, this._preload = e.preload ?? !1;\n    }\n  }\n  /**\n   * Registers this attribute as preloadable.\n   */\n  registerPreloadable() {\n    return this._preload = !0, this;\n  }\n  /**\n   * Creates a new Attribute with identical options and values except for the\n   * parameters specified in the given options object.\n   *\n   * @param newOptions An object containing options to apply to the new attribute\n   * @returns the new copied attribute\n   */\n  copy(t = {}) {\n    let e = { ...this, ...t };\n    return t.value !== void 0 && (e.valueFn = void 0), t.valueFn !== void 0 && (e.value = void 0), new M(e);\n  }\n  addListener(t) {\n    this._listeners.push(t);\n  }\n  removeListener(t) {\n    let e = this._listeners.indexOf(t);\n    e >= 0 && (this._listeners = this._listeners.splice(e, 1));\n  }\n  setTimeProvider(t) {\n    this._timeProvider = t;\n  }\n  _getComputeArg() {\n    return this.computeArg !== void 0 ? this.computeArg : this;\n  }\n  /**\n   * Synchronously computes the value of the attribute.\n   */\n  compute() {\n    this.valueFn && (this._computedValue = this.valueFn(this._getComputeArg()));\n  }\n  // Advances the time of the animation by the given number of msec,\n  // and returns whether or not a redraw is needed\n  advance(t = void 0) {\n    return (this.animation != null || this.needsUpdate || this.valueFn) && (this._timeProvider === null ? this.currentTime += t : this.currentTime = this._timeProvider()), this.animation == null && this._animationCompleteCallbacks.length > 0 && (console.warn(\n      \"Found animation-complete callbacks for a non-existent animation\"\n    ), this._cleanUpAnimation(!0)), this._lastTickValue = void 0, this._lastTickValue = this.getUntransformed(), this.animation != null || this.needsUpdate ? (this.needsUpdate = !1, this._changedLastTick = !0, !0) : (this._changedLastTick = !1, !1);\n  }\n  _computeAnimation(t = !0) {\n    if (!this.animation)\n      return;\n    this._timeProvider && (this.currentTime = this._timeProvider());\n    let { animator: e, start: r, initial: a } = this.animation, s = e.evaluate(\n      a,\n      Math.min(this.currentTime - r, e.duration)\n      // can add a debug flag here\n    );\n    this._animationFinished() && t ? (this.valueFn ? (this.recompute !== 2 || !this._hasComputed) && (this.compute(), this._hasComputed = !0) : this.value = s, this._cleanUpAnimation(!1), this._animatedValue = null) : this._animatedValue = s;\n  }\n  _animationFinished() {\n    return this.animation ? this.animation.animator.duration + 20 <= this.currentTime - this.animation.start : !0;\n  }\n  _performTransform(t) {\n    let e;\n    if (this.transform) {\n      let r = this._cachedValue;\n      if (r && K(r.raw, t))\n        e = r.result;\n      else {\n        let a = t;\n        e = this.transform(t, this._getComputeArg()), this.cacheTransform && (this._cachedValue = {\n          raw: a,\n          result: e\n        });\n      }\n    } else\n      e = t;\n    return e;\n  }\n  _cleanUpAnimation(t = !1) {\n    this._preload && this.animation && !t && (this.valueFn ? ((this.recompute !== 2 || !this._hasComputed) && (this.compute(), this._hasComputed = !0), this._lastTickValue = this.animation.animator.finalValue) : (this.value = this.animation.animator.finalValue, this._lastTickValue = this.value)), this.animation = null, this._animatedValue = null, this._animationCompleteCallbacks.forEach((e) => {\n      !t || !e.info.rejectOnCancel ? e.resolve(this) : e.reject({ newValue: this.last() });\n    }), this._animationCompleteCallbacks = [], this._animationCompleteTimeout && (clearTimeout(this._animationCompleteTimeout), this._animationCompleteTimeout = null);\n  }\n  /**\n   * Retrieves the current (transformed) value. If a context is not provided,\n   * the value returned will be the final value of any active transitions being\n   * rendered.\n   */\n  get() {\n    return this._performTransform(this.getUntransformed());\n  }\n  /**\n   * Retrieves the current un-transformed value.\n   */\n  getUntransformed() {\n    if (this._lastTickValue !== void 0 && !this.needsUpdate && this._timeProvider !== null && this.currentTime == this._timeProvider())\n      return this._lastTickValue;\n    this._computeAnimation();\n    let t;\n    return this._animatedValue != null ? t = this._animatedValue : this.valueFn ? ((this.recompute !== 2 || !this._hasComputed) && (this.compute(), this._hasComputed = !0), t = this._computedValue) : t = this.value, this._lastTickValue = t, t;\n  }\n  /**\n   * Returns an object that tells a renderer how to animate this attribute,\n   * including four properties: `start` and `end` (the initial and final values of\n   * the attribute) and `startTime` and `endTime` (the timestamps for the start and\n   * end of the animation, in ms). If there is no animation, `startTime` and\n   * `endTime` will be equal.\n   *\n   * @param currentTime A timestamp. If provided, the `startTime` and `endTime`\n   *  values will be converted (assuming that the stored animation is computed\n   *  with respect to the attribute's internal time representation).\n   * @returns A preloadable animation for the attribute, where the `start` and\n   *  `end` values are expressed as transformed values.\n   */\n  getPreload(t = null) {\n    if (this._preload || console.error(\"Cannot call getPreload on a non-preloadable attribute.\"), this._timeProvider && (this.currentTime = this._timeProvider()), !this.animation) {\n      let r = this.get();\n      return {\n        start: r,\n        end: r,\n        startTime: t || this.currentTime,\n        endTime: t || this.currentTime\n      };\n    }\n    let e = this.getPreloadUntransformed(t);\n    return {\n      start: this._performTransform(e.start),\n      end: this._performTransform(e.end),\n      startTime: e.startTime,\n      endTime: e.endTime\n    };\n  }\n  /**\n   * Returns an object that tells a renderer how to animate this attribute,\n   * including four properties: `start` and `end` (the initial and final values of\n   * the attribute) and `startTime` and `endTime` (the timestamps for the start and\n   * end of the animation, in ms). If there is no animation, `startTime` and\n   * `endTime` will be equal.\n   *\n   * @param currentTime A timestamp. If provided, the `startTime` and `endTime`\n   *  values will be converted (assuming that the stored animation is computed\n   *  with respect to the attribute's internal time representation).\n   * @returns A preloadable animation for the attribute, where the `start` and\n   *  `end` values are expressed as un-transformed values.\n   */\n  getPreloadUntransformed(t = null) {\n    if (this._timeProvider && (this.currentTime = this._timeProvider()), !this.animation) {\n      let s = this.getUntransformed();\n      return {\n        start: s,\n        end: s,\n        startTime: t || this.currentTime,\n        endTime: t || this.currentTime\n      };\n    }\n    if (this._animationFinished())\n      return this._computeAnimation(), this.getPreloadUntransformed(t);\n    let e;\n    this.valueFn ? ((this.recompute !== 2 || !this._hasComputed) && (this.compute(), this._hasComputed = !0), e = this._computedValue) : e = this.value;\n    let r = this.animation.animator.finalValue;\n    r === void 0 && console.error(\n      \"Animations on preloadable attributes must have a final value\"\n    );\n    let a = (t || this.currentTime) - this.currentTime;\n    return {\n      start: e,\n      end: r,\n      startTime: this.animation.start + a,\n      endTime: this.animation.start + this.animation.animator.duration + a\n    };\n  }\n  /**\n   * Synchronously sets the value of the attribute and marks that it needs to\n   * be updated on the next call to `advance()`.\n   *\n   * @param newValue The new value or value function.\n   */\n  set(t) {\n    typeof t == \"function\" ? (this.value != null && (this._computedValue = this.getUntransformed()), this.valueFn = t, this.value = void 0, this._hasComputed = !1, this._animatedValue = null) : (this.value = t, this.valueFn = null, this._animatedValue = null), this.needsUpdate = !0, this._lastTickValue = void 0, this.animation && this._cleanUpAnimation(!0), this._listeners.forEach((e) => e(this, !1));\n  }\n  /**\n   * Retrieves the non-animated value for the attribute, i.e. the final value\n   * if an animation is in progress or the current value otherwise. This method\n   * computes the value if specified as a value function.\n   */\n  data() {\n    return this.valueFn ? this.valueFn(this._getComputeArg()) : this.animation ? this.animation.animator.finalValue : this.value;\n  }\n  /**\n   * Returns the last value known for this attribute _without_ running the value\n   * function.\n   */\n  last() {\n    return this.animation && this._preload && this._computeAnimation(!1), this._lastTickValue !== void 0 ? this._lastTickValue : this._animatedValue != null ? this._animatedValue : this.value !== void 0 ? this.value : this._computedValue;\n  }\n  /**\n   * Returns the value that this attribute is approaching if animating (or `null`\n   * if not available), or the current value if not animating. This method does\n   * _not_ compute a new value for the attribute.\n   */\n  future() {\n    return this.animation ? this.animation.animator.finalValue : this._animatedValue != null ? this._animatedValue : this.value !== void 0 ? this.value : this._computedValue;\n  }\n  /**\n   * Marks that the transform has changed for this attribute. Only applies when\n   * `cached` is set to true.\n   */\n  updateTransform() {\n    this._cachedValue = null;\n  }\n  /**\n   * @returns Whether or not the attribute is currently being animated\n   */\n  animating() {\n    return this.animation != null;\n  }\n  /**\n   * Applies an animation to this attribute. The attribute will call the\n   * `evaluate` method on the animation every time the attribute's `advance()`\n   * method runs, until the time delta since the start of the animation exceeds\n   * the duration of the animation.\n   * @param animation an animation to run\n   * @param context the context in which the animation runs\n   */\n  animate(t) {\n    if (this._timeProvider && (this.currentTime = this._timeProvider()), this.animation) {\n      this._computeAnimation();\n      let e = this._preload ? this.last() : this._animatedValue;\n      this.valueFn ? this._computedValue = e : this.value = e, this._lastTickValue = this._animatedValue, this._cleanUpAnimation(!0);\n    }\n    return this.animation = {\n      animator: t,\n      initial: this.last(),\n      start: this.currentTime\n    }, this._computeAnimation(), this._listeners.forEach((e) => e(this, !0)), this;\n  }\n  /**\n   * Wait until the attribute's current animation has finished.\n   *\n   * @param rejectOnCancel Whether or not to throw a promise rejection if the\n   *  animation is canceled. The default is true.\n   * @returns A `Promise` that resolves when the animation has completed, and\n   *  rejects if the animation is canceled or superseded by a different animation.\n   *  If `rejectOnCancel` is set to `false`, the promise resolves in both\n   *  situations. If there is no active animation, the promise resolves immediately.\n   */\n  wait(t = !0) {\n    if (!this.animation)\n      return new Promise((r, a) => r(this));\n    let e = new yi({ rejectOnCancel: t });\n    if (this._animationCompleteCallbacks.push(e), this._preload) {\n      let { endTime: r } = this.getPreloadUntransformed(), a = this._timeProvider();\n      this._animationCompleteTimeout || (this._animationCompleteTimeout = setTimeout(() => {\n        this._cleanUpAnimation();\n      }, r - a));\n    }\n    return e.promise;\n  }\n  /**\n   * \"Freezes\" this attribute by setting it to its last value. This removes any\n   * value functions and animations and replaces them with static values. The\n   * value function will not be re-run.\n   */\n  freeze() {\n    return this.animation && this._cleanUpAnimation(!0), this.value = this.last(), this.valueFn = void 0, this;\n  }\n  /**\n   * Sets transform of an attribute to a new function, can be applied to an Attribute,\n   * a Mark, or a MarkRenderGroup\n   * @param attrToModify attribute to modify\n   * @param newFunc new function to set transform to\n   */\n  setTransform(t) {\n    this.transform = t, this.updateTransform();\n  }\n  /**\n   * @returns whether or not this attribute changed value (due to animation or\n   * other updates) on the last call to `advance`\n   */\n  changed() {\n    return this._changedLastTick;\n  }\n}\nfunction v(i, t) {\n  let e = i.length;\n  Array.isArray(i[0]) || (i = [i]), Array.isArray(t[0]) || (t = t.map((n) => [n]));\n  let r = t[0].length, a = t[0].map((n, o) => t.map((h) => h[o])), s = i.map((n) => a.map((o) => {\n    let h = 0;\n    if (!Array.isArray(n)) {\n      for (let l of o)\n        h += n * l;\n      return h;\n    }\n    for (let l = 0; l < n.length; l++)\n      h += n[l] * (o[l] || 0);\n    return h;\n  }));\n  return e === 1 && (s = s[0]), r === 1 ? s.map((n) => n[0]) : s;\n}\nfunction st(i) {\n  return $(i) === \"string\";\n}\nfunction $(i) {\n  return (Object.prototype.toString.call(i).match(/^\\[object\\s+(.*?)\\]$/)[1] || \"\").toLowerCase();\n}\nfunction bt(i, t) {\n  i = +i, t = +t;\n  let e = (Math.floor(i) + \"\").length;\n  if (t > e)\n    return +i.toFixed(t - e);\n  {\n    let r = 10 ** (e - t);\n    return Math.round(i / r) * r;\n  }\n}\nfunction Be(i) {\n  if (!i)\n    return;\n  i = i.trim();\n  const t = /^([a-z]+)\\((.+?)\\)$/i, e = /^-?[\\d.]+$/;\n  let r = i.match(t);\n  if (r) {\n    let a = [];\n    return r[2].replace(/\\/?\\s*([-\\w.]+(?:%|deg)?)/g, (s, n) => {\n      /%$/.test(n) ? (n = new Number(n.slice(0, -1) / 100), n.type = \"<percentage>\") : /deg$/.test(n) ? (n = new Number(+n.slice(0, -3)), n.type = \"<angle>\", n.unit = \"deg\") : e.test(n) && (n = new Number(n), n.type = \"<number>\"), s.startsWith(\"/\") && (n = n instanceof Number ? n : new Number(n), n.alpha = !0), a.push(n);\n    }), {\n      name: r[1].toLowerCase(),\n      rawName: r[1],\n      rawArgs: r[2],\n      // An argument could be (as of css-color-4):\n      // a number, percentage, degrees (hue), ident (in color())\n      args: a\n    };\n  }\n}\nfunction ze(i) {\n  return i[i.length - 1];\n}\nfunction Mt(i, t, e) {\n  return isNaN(i) ? t : isNaN(t) ? i : i + (t - i) * e;\n}\nfunction Fe(i, t, e) {\n  return (e - i) / (t - i);\n}\nfunction qt(i, t, e) {\n  return Mt(t[0], t[1], Fe(i[0], i[1], e));\n}\nfunction Oe(i) {\n  return i.map((t) => t.split(\"|\").map((e) => {\n    e = e.trim();\n    let r = e.match(/^(<[a-z]+>)\\[(-?[.\\d]+),\\s*(-?[.\\d]+)\\]?$/);\n    if (r) {\n      let a = new String(r[1]);\n      return a.range = [+r[2], +r[3]], a;\n    }\n    return e;\n  }));\n}\nvar vi = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  interpolate: Mt,\n  interpolateInv: Fe,\n  isString: st,\n  last: ze,\n  mapRange: qt,\n  multiplyMatrices: v,\n  parseCoordGrammar: Oe,\n  parseFunction: Be,\n  toPrecision: bt,\n  type: $\n});\nclass ki {\n  add(t, e, r) {\n    if (typeof arguments[0] != \"string\") {\n      for (var t in arguments[0])\n        this.add(t, arguments[0][t], arguments[1]);\n      return;\n    }\n    (Array.isArray(t) ? t : [t]).forEach(function(a) {\n      this[a] = this[a] || [], e && this[a][r ? \"unshift\" : \"push\"](e);\n    }, this);\n  }\n  run(t, e) {\n    this[t] = this[t] || [], this[t].forEach(function(r) {\n      r.call(e && e.context ? e.context : e, e);\n    });\n  }\n}\nconst X = new ki();\nvar F = {\n  gamut_mapping: \"lch.c\",\n  precision: 5,\n  deltaE: \"76\"\n  // Default deltaE method\n};\nconst R = {\n  // for compatibility, the four-digit chromaticity-derived ones everyone else uses\n  D50: [0.3457 / 0.3585, 1, (1 - 0.3457 - 0.3585) / 0.3585],\n  D65: [0.3127 / 0.329, 1, (1 - 0.3127 - 0.329) / 0.329]\n};\nfunction Yt(i) {\n  return Array.isArray(i) ? i : R[i];\n}\nfunction vt(i, t, e, r = {}) {\n  if (i = Yt(i), t = Yt(t), !i || !t)\n    throw new TypeError(`Missing white point to convert ${i ? \"\" : \"from\"}${!i && !t ? \"/\" : \"\"}${t ? \"\" : \"to\"}`);\n  if (i === t)\n    return e;\n  let a = { W1: i, W2: t, XYZ: e, options: r };\n  if (X.run(\"chromatic-adaptation-start\", a), a.M || (a.W1 === R.D65 && a.W2 === R.D50 ? a.M = [\n    [1.0479298208405488, 0.022946793341019088, -0.05019222954313557],\n    [0.029627815688159344, 0.990434484573249, -0.01707382502938514],\n    [-0.009243058152591178, 0.015055144896577895, 0.7518742899580008]\n  ] : a.W1 === R.D50 && a.W2 === R.D65 && (a.M = [\n    [0.9554734527042182, -0.023098536874261423, 0.0632593086610217],\n    [-0.028369706963208136, 1.0099954580058226, 0.021041398966943008],\n    [0.012314001688319899, -0.020507696433477912, 1.3303659366080753]\n  ])), X.run(\"chromatic-adaptation-end\", a), a.M)\n    return v(a.M, a.XYZ);\n  throw new TypeError(\"Only Bradford CAT with white points D50 and D65 supported for now.\");\n}\nconst wi = 75e-6, C = class C {\n  constructor(t) {\n    var a, s, n;\n    this.id = t.id, this.name = t.name, this.base = t.base ? C.get(t.base) : null, this.aliases = t.aliases, this.base && (this.fromBase = t.fromBase, this.toBase = t.toBase);\n    let e = t.coords ?? this.base.coords;\n    for (let o in e)\n      \"name\" in e[o] || (e[o].name = o);\n    this.coords = e;\n    let r = t.white ?? this.base.white ?? \"D65\";\n    this.white = Yt(r), this.formats = t.formats ?? {};\n    for (let o in this.formats) {\n      let h = this.formats[o];\n      h.type || (h.type = \"function\"), h.name || (h.name = o);\n    }\n    t.cssId && !((a = this.formats.functions) != null && a.color) ? (this.formats.color = { id: t.cssId }, Object.defineProperty(this, \"cssId\", { value: t.cssId })) : (s = this.formats) != null && s.color && !((n = this.formats) != null && n.color.id) && (this.formats.color.id = this.id), this.referred = t.referred, Object.defineProperty(this, \"path\", {\n      value: xi(this).reverse(),\n      writable: !1,\n      enumerable: !0,\n      configurable: !0\n    }), X.run(\"colorspace-init-end\", this);\n  }\n  inGamut(t, { epsilon: e = wi } = {}) {\n    if (this.isPolar)\n      return t = this.toBase(t), this.base.inGamut(t, { epsilon: e });\n    let r = Object.values(this.coords);\n    return t.every((a, s) => {\n      let n = r[s];\n      if (n.type !== \"angle\" && n.range) {\n        if (Number.isNaN(a))\n          return !0;\n        let [o, h] = n.range;\n        return (o === void 0 || a >= o - e) && (h === void 0 || a <= h + e);\n      }\n      return !0;\n    });\n  }\n  get cssId() {\n    var t, e;\n    return ((e = (t = this.formats.functions) == null ? void 0 : t.color) == null ? void 0 : e.id) || this.id;\n  }\n  get isPolar() {\n    for (let t in this.coords)\n      if (this.coords[t].type === \"angle\")\n        return !0;\n    return !1;\n  }\n  getFormat(t) {\n    if (typeof t == \"object\")\n      return t = ee(t, this), t;\n    let e;\n    return t === \"default\" ? e = Object.values(this.formats)[0] : e = this.formats[t], e ? (e = ee(e, this), e) : null;\n  }\n  // We cannot rely on simple === because then ColorSpace objects cannot be proxied\n  equals(t) {\n    return t ? this === t || this.id === t.id : !1;\n  }\n  to(t, e) {\n    if (arguments.length === 1 && ([t, e] = [t.space, t.coords]), t = C.get(t), this.equals(t))\n      return e;\n    e = e.map((o) => Number.isNaN(o) ? 0 : o);\n    let r = this.path, a = t.path, s, n;\n    for (let o = 0; o < r.length && r[o].equals(a[o]); o++)\n      s = r[o], n = o;\n    if (!s)\n      throw new Error(`Cannot convert between color spaces ${this} and ${t}: no connection space was found`);\n    for (let o = r.length - 1; o > n; o--)\n      e = r[o].toBase(e);\n    for (let o = n + 1; o < a.length; o++)\n      e = a[o].fromBase(e);\n    return e;\n  }\n  from(t, e) {\n    return arguments.length === 1 && ([t, e] = [t.space, t.coords]), t = C.get(t), t.to(this, e);\n  }\n  toString() {\n    return `${this.name} (${this.id})`;\n  }\n  getMinCoords() {\n    let t = [];\n    for (let e in this.coords) {\n      let r = this.coords[e], a = r.range || r.refRange;\n      t.push((a == null ? void 0 : a.min) ?? 0);\n    }\n    return t;\n  }\n  // Returns array of unique color spaces\n  static get all() {\n    return [...new Set(Object.values(C.registry))];\n  }\n  static register(t, e) {\n    if (arguments.length === 1 && (e = arguments[0], t = e.id), e = this.get(e), this.registry[t] && this.registry[t] !== e)\n      throw new Error(`Duplicate color space registration: '${t}'`);\n    if (this.registry[t] = e, arguments.length === 1 && e.aliases)\n      for (let r of e.aliases)\n        this.register(r, e);\n    return e;\n  }\n  /**\n   * Lookup ColorSpace object by name\n   * @param {ColorSpace | string} name\n   */\n  static get(t, ...e) {\n    if (!t || t instanceof C)\n      return t;\n    if ($(t) === \"string\") {\n      let a = C.registry[t.toLowerCase()];\n      if (!a)\n        throw new TypeError(`No color space found with id = \"${t}\"`);\n      return a;\n    }\n    if (e.length)\n      return C.get(...e);\n    throw new TypeError(`${t} is not a valid color space`);\n  }\n  /**\n   * Get metadata about a coordinate of a color space\n   *\n   * @static\n   * @param {Array | string} ref\n   * @param {ColorSpace | string} [workingSpace]\n   * @return {Object}\n   */\n  static resolveCoord(t, e) {\n    var h;\n    let r = $(t), a, s;\n    if (r === \"string\" ? t.includes(\".\") ? [a, s] = t.split(\".\") : [a, s] = [, t] : Array.isArray(t) ? [a, s] = t : (a = t.space, s = t.coordId), a = C.get(a), a || (a = e), !a)\n      throw new TypeError(`Cannot resolve coordinate reference ${t}: No color space specified and relative references are not allowed here`);\n    if (r = $(s), r === \"number\" || r === \"string\" && s >= 0) {\n      let l = Object.entries(a.coords)[s];\n      if (l)\n        return { space: a, id: l[0], index: s, ...l[1] };\n    }\n    a = C.get(a);\n    let n = s.toLowerCase(), o = 0;\n    for (let l in a.coords) {\n      let u = a.coords[l];\n      if (l.toLowerCase() === n || ((h = u.name) == null ? void 0 : h.toLowerCase()) === n)\n        return { space: a, id: l, index: o, ...u };\n      o++;\n    }\n    throw new TypeError(`No \"${s}\" coordinate found in ${a.name}. Its coordinates are: ${Object.keys(a.coords).join(\", \")}`);\n  }\n};\nLt(C, \"registry\", {}), Lt(C, \"DEFAULT_FORMAT\", {\n  type: \"functions\",\n  name: \"color\"\n});\nlet f = C;\nfunction xi(i) {\n  let t = [i];\n  for (let e = i; e = e.base; )\n    t.push(e);\n  return t;\n}\nfunction ee(i, { coords: t } = {}) {\n  if (i.coords && !i.coordGrammar) {\n    i.type || (i.type = \"function\"), i.name || (i.name = \"color\"), i.coordGrammar = Oe(i.coords);\n    let e = Object.entries(t).map(([r, a], s) => {\n      let n = i.coordGrammar[s][0], o = a.range || a.refRange, h = n.range, l = \"\";\n      return n == \"<percentage>\" ? (h = [0, 100], l = \"%\") : n == \"<angle>\" && (l = \"deg\"), { fromRange: o, toRange: h, suffix: l };\n    });\n    i.serializeCoords = (r, a) => r.map((s, n) => {\n      let { fromRange: o, toRange: h, suffix: l } = e[n];\n      return o && h && (s = qt(o, h, s)), s = bt(s, a), l && (s += l), s;\n    });\n  }\n  return i;\n}\nvar L = new f({\n  id: \"xyz-d65\",\n  name: \"XYZ D65\",\n  coords: {\n    x: { name: \"X\" },\n    y: { name: \"Y\" },\n    z: { name: \"Z\" }\n  },\n  white: \"D65\",\n  formats: {\n    color: {\n      ids: [\"xyz-d65\", \"xyz\"]\n    }\n  },\n  aliases: [\"xyz\"]\n});\nclass x extends f {\n  /**\n   * Creates a new RGB ColorSpace.\n   * If coords are not specified, they will use the default RGB coords.\n   * Instead of `fromBase()` and `toBase()` functions,\n   * you can specify to/from XYZ matrices and have `toBase()` and `fromBase()` automatically generated.\n   * @param {*} options - Same options as {@link ColorSpace} plus:\n   * @param {number[][]} options.toXYZ_M - Matrix to convert to XYZ\n   * @param {number[][]} options.fromXYZ_M - Matrix to convert from XYZ\n   */\n  constructor(t) {\n    t.coords || (t.coords = {\n      r: {\n        range: [0, 1],\n        name: \"Red\"\n      },\n      g: {\n        range: [0, 1],\n        name: \"Green\"\n      },\n      b: {\n        range: [0, 1],\n        name: \"Blue\"\n      }\n    }), t.base || (t.base = L), t.toXYZ_M && t.fromXYZ_M && (t.toBase ?? (t.toBase = (e) => {\n      let r = v(t.toXYZ_M, e);\n      return this.white !== this.base.white && (r = vt(this.white, this.base.white, r)), r;\n    }), t.fromBase ?? (t.fromBase = (e) => (e = vt(this.base.white, this.white, e), v(t.fromXYZ_M, e)))), t.referred ?? (t.referred = \"display\"), super(t);\n  }\n}\nfunction Ye(i, { meta: t } = {}) {\n  var r, a, s, n, o;\n  let e = { str: (r = String(i)) == null ? void 0 : r.trim() };\n  if (X.run(\"parse-start\", e), e.color)\n    return e.color;\n  if (e.parsed = Be(e.str), e.parsed) {\n    let h = e.parsed.name;\n    if (h === \"color\") {\n      let l = e.parsed.args.shift(), u = e.parsed.rawArgs.indexOf(\"/\") > 0 ? e.parsed.args.pop() : 1;\n      for (let d of f.all) {\n        let m = d.getFormat(\"color\");\n        if (m && (l === m.id || (a = m.ids) != null && a.includes(l))) {\n          const p = Object.keys(d.coords).map((y, b) => e.parsed.args[b] || 0);\n          return t && (t.formatId = \"color\"), { spaceId: d.id, coords: p, alpha: u };\n        }\n      }\n      let c = \"\";\n      if (l in f.registry) {\n        let d = (o = (n = (s = f.registry[l].formats) == null ? void 0 : s.functions) == null ? void 0 : n.color) == null ? void 0 : o.id;\n        d && (c = `Did you mean color(${d})?`);\n      }\n      throw new TypeError(`Cannot parse color(${l}). ` + (c || \"Missing a plugin?\"));\n    } else\n      for (let l of f.all) {\n        let u = l.getFormat(h);\n        if (u && u.type === \"function\") {\n          let c = 1;\n          (u.lastAlpha || ze(e.parsed.args).alpha) && (c = e.parsed.args.pop());\n          let d = e.parsed.args, m;\n          return u.coordGrammar && (m = Object.entries(l.coords).map(([p, y], b) => {\n            var q;\n            let k = u.coordGrammar[b], w = (q = d[b]) == null ? void 0 : q.type, D = k.find((Y) => Y == w);\n            if (!D) {\n              let Y = y.name || p;\n              throw new TypeError(`${w} not allowed for ${Y} in ${h}()`);\n            }\n            let S = D.range;\n            w === \"<percentage>\" && (S || (S = [0, 1]));\n            let E = y.range || y.refRange;\n            return S && E && (d[b] = qt(S, E, d[b])), D;\n          })), t && Object.assign(t, { formatId: u.name, types: m }), {\n            spaceId: l.id,\n            coords: d,\n            alpha: c\n          };\n        }\n      }\n  } else\n    for (let h of f.all)\n      for (let l in h.formats) {\n        let u = h.formats[l];\n        if (u.type !== \"custom\" || u.test && !u.test(e.str))\n          continue;\n        let c = u.parse(e.str);\n        if (c)\n          return c.alpha ?? (c.alpha = 1), t && (t.formatId = l), c;\n      }\n  throw new TypeError(`Could not parse ${i} as a color. Missing a plugin?`);\n}\nfunction g(i) {\n  if (!i)\n    throw new TypeError(\"Empty color reference\");\n  st(i) && (i = Ye(i));\n  let t = i.space || i.spaceId;\n  return t instanceof f || (i.space = f.get(t)), i.alpha === void 0 && (i.alpha = 1), i;\n}\nfunction nt(i, t) {\n  return t = f.get(t), t.from(i);\n}\nfunction P(i, t) {\n  let { space: e, index: r } = f.resolveCoord(t, i.space);\n  return nt(i, e)[r];\n}\nfunction $e(i, t, e) {\n  return t = f.get(t), i.coords = t.to(i.space, e), i;\n}\nfunction j(i, t, e) {\n  if (i = g(i), arguments.length === 2 && $(arguments[1]) === \"object\") {\n    let r = arguments[1];\n    for (let a in r)\n      j(i, a, r[a]);\n  } else {\n    typeof e == \"function\" && (e = e(P(i, t)));\n    let { space: r, index: a } = f.resolveCoord(t, i.space), s = nt(i, r);\n    s[a] = e, $e(i, r, s);\n  }\n  return i;\n}\nvar Gt = new f({\n  id: \"xyz-d50\",\n  name: \"XYZ D50\",\n  white: \"D50\",\n  base: L,\n  fromBase: (i) => vt(L.white, \"D50\", i),\n  toBase: (i) => vt(\"D50\", L.white, i),\n  formats: {\n    color: {}\n  }\n});\nconst Si = 216 / 24389, ie = 24 / 116, lt = 24389 / 27;\nlet Pt = R.D50;\nvar T = new f({\n  id: \"lab\",\n  name: \"Lab\",\n  coords: {\n    l: {\n      refRange: [0, 100],\n      name: \"L\"\n    },\n    a: {\n      refRange: [-125, 125]\n    },\n    b: {\n      refRange: [-125, 125]\n    }\n  },\n  // Assuming XYZ is relative to D50, convert to CIE Lab\n  // from CIE standard, which now defines these as a rational fraction\n  white: Pt,\n  base: Gt,\n  // Convert D50-adapted XYX to Lab\n  //  CIE 15.3:2004 section 8.2.1.1\n  fromBase(i) {\n    let e = i.map((r, a) => r / Pt[a]).map((r) => r > Si ? Math.cbrt(r) : (lt * r + 16) / 116);\n    return [\n      116 * e[1] - 16,\n      // L\n      500 * (e[0] - e[1]),\n      // a\n      200 * (e[1] - e[2])\n      // b\n    ];\n  },\n  // Convert Lab to D50-adapted XYZ\n  // Same result as CIE 15.3:2004 Appendix D although the derivation is different\n  // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n  toBase(i) {\n    let t = [];\n    return t[1] = (i[0] + 16) / 116, t[0] = i[1] / 500 + t[1], t[2] = t[1] - i[2] / 200, [\n      t[0] > ie ? Math.pow(t[0], 3) : (116 * t[0] - 16) / lt,\n      i[0] > 8 ? Math.pow((i[0] + 16) / 116, 3) : i[0] / lt,\n      t[2] > ie ? Math.pow(t[2], 3) : (116 * t[2] - 16) / lt\n    ].map((r, a) => r * Pt[a]);\n  },\n  formats: {\n    lab: {\n      coords: [\"<number> | <percentage>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"]\n    }\n  }\n});\nfunction Ct(i) {\n  return (i % 360 + 360) % 360;\n}\nfunction Ci(i, t) {\n  if (i === \"raw\")\n    return t;\n  let [e, r] = t.map(Ct), a = r - e;\n  return i === \"increasing\" ? a < 0 && (r += 360) : i === \"decreasing\" ? a > 0 && (e += 360) : i === \"longer\" ? -180 < a && a < 180 && (a > 0 ? e += 360 : r += 360) : i === \"shorter\" && (a > 180 ? e += 360 : a < -180 && (r += 360)), [e, r];\n}\nvar it = new f({\n  id: \"lch\",\n  name: \"LCH\",\n  coords: {\n    l: {\n      refRange: [0, 100],\n      name: \"Lightness\"\n    },\n    c: {\n      refRange: [0, 150],\n      name: \"Chroma\"\n    },\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    }\n  },\n  base: T,\n  fromBase(i) {\n    let [t, e, r] = i, a;\n    const s = 0.02;\n    return Math.abs(e) < s && Math.abs(r) < s ? a = NaN : a = Math.atan2(r, e) * 180 / Math.PI, [\n      t,\n      // L is still L\n      Math.sqrt(e ** 2 + r ** 2),\n      // Chroma\n      Ct(a)\n      // Hue, in degrees [0 to 360)\n    ];\n  },\n  toBase(i) {\n    let [t, e, r] = i;\n    return e < 0 && (e = 0), isNaN(r) && (r = 0), [\n      t,\n      // L is still L\n      e * Math.cos(r * Math.PI / 180),\n      // a\n      e * Math.sin(r * Math.PI / 180)\n      // b\n    ];\n  },\n  formats: {\n    lch: {\n      coords: [\"<number> | <percentage>\", \"<number> | <percentage>\", \"<number> | <angle>\"]\n    }\n  }\n});\nconst re = 25 ** 7, kt = Math.PI, ae = 180 / kt, V = kt / 180;\nfunction $t(i, t, { kL: e = 1, kC: r = 1, kH: a = 1 } = {}) {\n  let [s, n, o] = T.from(i), h = it.from(T, [s, n, o])[1], [l, u, c] = T.from(t), d = it.from(T, [l, u, c])[1];\n  h < 0 && (h = 0), d < 0 && (d = 0);\n  let p = ((h + d) / 2) ** 7, y = 0.5 * (1 - Math.sqrt(p / (p + re))), b = (1 + y) * n, k = (1 + y) * u, w = Math.sqrt(b ** 2 + o ** 2), D = Math.sqrt(k ** 2 + c ** 2), S = b === 0 && o === 0 ? 0 : Math.atan2(o, b), E = k === 0 && c === 0 ? 0 : Math.atan2(c, k);\n  S < 0 && (S += 2 * kt), E < 0 && (E += 2 * kt), S *= ae, E *= ae;\n  let q = l - s, Y = D - w, B = E - S, N = S + E, Wt = Math.abs(B), J;\n  w * D === 0 ? J = 0 : Wt <= 180 ? J = B : B > 180 ? J = B - 360 : B < -180 ? J = B + 360 : console.log(\"the unthinkable has happened\");\n  let Nt = 2 * Math.sqrt(D * w) * Math.sin(J * V / 2), ui = (s + l) / 2, At = (w + D) / 2, Jt = Math.pow(At, 7), O;\n  w * D === 0 ? O = N : Wt <= 180 ? O = N / 2 : N < 360 ? O = (N + 360) / 2 : O = (N - 360) / 2;\n  let Qt = (ui - 50) ** 2, ci = 1 + 0.015 * Qt / Math.sqrt(20 + Qt), Kt = 1 + 0.045 * At, Q = 1;\n  Q -= 0.17 * Math.cos((O - 30) * V), Q += 0.24 * Math.cos(2 * O * V), Q += 0.32 * Math.cos((3 * O + 6) * V), Q -= 0.2 * Math.cos((4 * O - 63) * V);\n  let te = 1 + 0.015 * At * Q, di = 30 * Math.exp(-1 * ((O - 275) / 25) ** 2), fi = 2 * Math.sqrt(Jt / (Jt + re)), mi = -1 * Math.sin(2 * di * V) * fi, ht = (q / (e * ci)) ** 2;\n  return ht += (Y / (r * Kt)) ** 2, ht += (Nt / (a * te)) ** 2, ht += mi * (Y / (r * Kt)) * (Nt / (a * te)), Math.sqrt(ht);\n}\nconst Ti = 75e-6;\nfunction et(i, t = i.space, { epsilon: e = Ti } = {}) {\n  i = g(i), t = f.get(t);\n  let r = i.coords;\n  return t !== i.space && (r = t.from(i)), t.inGamut(r, { epsilon: e });\n}\nfunction rt(i) {\n  return {\n    space: i.space,\n    coords: i.coords.slice(),\n    alpha: i.alpha\n  };\n}\nfunction I(i, { method: t = F.gamut_mapping, space: e = i.space } = {}) {\n  if (st(arguments[1]) && (e = arguments[1]), e = f.get(e), et(i, e, { epsilon: 0 }))\n    return g(i);\n  let r = A(i, e);\n  if (t !== \"clip\" && !et(i, e)) {\n    let a = I(rt(r), { method: \"clip\", space: e });\n    if ($t(i, a) > 2) {\n      let s = f.resolveCoord(t), n = s.space, o = s.id, h = A(r, n), u = (s.range || s.refRange)[0], c = 0.01, d = u, m = P(h, o);\n      for (; m - d > c; ) {\n        let p = rt(h);\n        p = I(p, { space: e, method: \"clip\" }), $t(h, p) - 2 < c ? d = P(h, o) : m = P(h, o), j(h, o, (d + m) / 2);\n      }\n      r = A(h, e);\n    } else\n      r = a;\n  }\n  if (t === \"clip\" || !et(r, e, { epsilon: 0 })) {\n    let a = Object.values(e.coords).map((s) => s.range || []);\n    r.coords = r.coords.map((s, n) => {\n      let [o, h] = a[n];\n      return o !== void 0 && (s = Math.max(o, s)), h !== void 0 && (s = Math.min(s, h)), s;\n    });\n  }\n  return e !== i.space && (r = A(r, i.space)), i.coords = r.coords, i;\n}\nI.returns = \"color\";\nfunction A(i, t, { inGamut: e } = {}) {\n  i = g(i), t = f.get(t);\n  let r = t.from(i), a = { space: t, coords: r, alpha: i.alpha };\n  return e && (a = I(a)), a;\n}\nA.returns = \"color\";\nfunction wt(i, {\n  precision: t = F.precision,\n  format: e = \"default\",\n  inGamut: r = !0,\n  ...a\n} = {}) {\n  var h;\n  let s;\n  i = g(i);\n  let n = e;\n  e = i.space.getFormat(e) ?? i.space.getFormat(\"default\") ?? f.DEFAULT_FORMAT, r || (r = e.toGamut);\n  let o = i.coords;\n  if (o = o.map((l) => l || 0), r && !et(i) && (o = I(rt(i), r === !0 ? void 0 : r).coords), e.type === \"custom\")\n    if (a.precision = t, e.serialize)\n      s = e.serialize(o, i.alpha, a);\n    else\n      throw new TypeError(`format ${n} can only be used to parse colors, not for serialization`);\n  else {\n    let l = e.name || \"color\";\n    e.serializeCoords ? o = e.serializeCoords(o, t) : t !== null && (o = o.map((m) => bt(m, t)));\n    let u = [...o];\n    if (l === \"color\") {\n      let m = e.id || ((h = e.ids) == null ? void 0 : h[0]) || i.space.id;\n      u.unshift(m);\n    }\n    let c = i.alpha;\n    t !== null && (c = bt(c, t));\n    let d = i.alpha < 1 && !e.noAlpha ? `${e.commas ? \",\" : \" /\"} ${c}` : \"\";\n    s = `${l}(${u.join(e.commas ? \", \" : \" \")}${d})`;\n  }\n  return s;\n}\nconst Di = [\n  [0.6369580483012914, 0.14461690358620832, 0.1688809751641721],\n  [0.2627002120112671, 0.6779980715188708, 0.05930171646986196],\n  [0, 0.028072693049087428, 1.060985057710791]\n], Ai = [\n  [1.716651187971268, -0.355670783776392, -0.25336628137366],\n  [-0.666684351832489, 1.616481236634939, 0.0157685458139111],\n  [0.017639857445311, -0.042770613257809, 0.942103121235474]\n];\nvar Tt = new x({\n  id: \"rec2020-linear\",\n  name: \"Linear REC.2020\",\n  white: \"D65\",\n  toXYZ_M: Di,\n  fromXYZ_M: Ai,\n  formats: {\n    color: {}\n  }\n});\nconst ut = 1.09929682680944, se = 0.018053968510807;\nvar Xe = new x({\n  id: \"rec2020\",\n  name: \"REC.2020\",\n  base: Tt,\n  // Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\n  toBase(i) {\n    return i.map(function(t) {\n      return t < se * 4.5 ? t / 4.5 : Math.pow((t + ut - 1) / ut, 1 / 0.45);\n    });\n  },\n  fromBase(i) {\n    return i.map(function(t) {\n      return t >= se ? ut * Math.pow(t, 0.45) - (ut - 1) : 4.5 * t;\n    });\n  },\n  formats: {\n    color: {}\n  }\n});\nconst Li = [\n  [0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\n  [0.2289745640697488, 0.6917385218365064, 0.079286914093745],\n  [0, 0.04511338185890264, 1.043944368900976]\n], Pi = [\n  [2.493496911941425, -0.9313836179191239, -0.40271078445071684],\n  [-0.8294889695615747, 1.7626640603183463, 0.023624685841943577],\n  [0.03584583024378447, -0.07617238926804182, 0.9568845240076872]\n];\nvar je = new x({\n  id: \"p3-linear\",\n  name: \"Linear P3\",\n  white: \"D65\",\n  toXYZ_M: Li,\n  fromXYZ_M: Pi\n});\nconst Ei = [\n  [0.41239079926595934, 0.357584339383878, 0.1804807884018343],\n  [0.21263900587151027, 0.715168678767756, 0.07219231536073371],\n  [0.01933081871559182, 0.11919477979462598, 0.9505321522496607]\n], Ri = [\n  [3.2409699419045226, -1.537383177570094, -0.4986107602930034],\n  [-0.9692436362808796, 1.8759675015077202, 0.04155505740717559],\n  [0.05563007969699366, -0.20397695888897652, 1.0569715142428786]\n];\nvar Ie = new x({\n  id: \"srgb-linear\",\n  name: \"Linear sRGB\",\n  white: \"D65\",\n  toXYZ_M: Ei,\n  fromXYZ_M: Ri,\n  formats: {\n    color: {}\n  }\n}), ne = {\n  aliceblue: [240 / 255, 248 / 255, 1],\n  antiquewhite: [250 / 255, 235 / 255, 215 / 255],\n  aqua: [0, 1, 1],\n  aquamarine: [127 / 255, 1, 212 / 255],\n  azure: [240 / 255, 1, 1],\n  beige: [245 / 255, 245 / 255, 220 / 255],\n  bisque: [1, 228 / 255, 196 / 255],\n  black: [0, 0, 0],\n  blanchedalmond: [1, 235 / 255, 205 / 255],\n  blue: [0, 0, 1],\n  blueviolet: [138 / 255, 43 / 255, 226 / 255],\n  brown: [165 / 255, 42 / 255, 42 / 255],\n  burlywood: [222 / 255, 184 / 255, 135 / 255],\n  cadetblue: [95 / 255, 158 / 255, 160 / 255],\n  chartreuse: [127 / 255, 1, 0],\n  chocolate: [210 / 255, 105 / 255, 30 / 255],\n  coral: [1, 127 / 255, 80 / 255],\n  cornflowerblue: [100 / 255, 149 / 255, 237 / 255],\n  cornsilk: [1, 248 / 255, 220 / 255],\n  crimson: [220 / 255, 20 / 255, 60 / 255],\n  cyan: [0, 1, 1],\n  darkblue: [0, 0, 139 / 255],\n  darkcyan: [0, 139 / 255, 139 / 255],\n  darkgoldenrod: [184 / 255, 134 / 255, 11 / 255],\n  darkgray: [169 / 255, 169 / 255, 169 / 255],\n  darkgreen: [0, 100 / 255, 0],\n  darkgrey: [169 / 255, 169 / 255, 169 / 255],\n  darkkhaki: [189 / 255, 183 / 255, 107 / 255],\n  darkmagenta: [139 / 255, 0, 139 / 255],\n  darkolivegreen: [85 / 255, 107 / 255, 47 / 255],\n  darkorange: [1, 140 / 255, 0],\n  darkorchid: [153 / 255, 50 / 255, 204 / 255],\n  darkred: [139 / 255, 0, 0],\n  darksalmon: [233 / 255, 150 / 255, 122 / 255],\n  darkseagreen: [143 / 255, 188 / 255, 143 / 255],\n  darkslateblue: [72 / 255, 61 / 255, 139 / 255],\n  darkslategray: [47 / 255, 79 / 255, 79 / 255],\n  darkslategrey: [47 / 255, 79 / 255, 79 / 255],\n  darkturquoise: [0, 206 / 255, 209 / 255],\n  darkviolet: [148 / 255, 0, 211 / 255],\n  deeppink: [1, 20 / 255, 147 / 255],\n  deepskyblue: [0, 191 / 255, 1],\n  dimgray: [105 / 255, 105 / 255, 105 / 255],\n  dimgrey: [105 / 255, 105 / 255, 105 / 255],\n  dodgerblue: [30 / 255, 144 / 255, 1],\n  firebrick: [178 / 255, 34 / 255, 34 / 255],\n  floralwhite: [1, 250 / 255, 240 / 255],\n  forestgreen: [34 / 255, 139 / 255, 34 / 255],\n  fuchsia: [1, 0, 1],\n  gainsboro: [220 / 255, 220 / 255, 220 / 255],\n  ghostwhite: [248 / 255, 248 / 255, 1],\n  gold: [1, 215 / 255, 0],\n  goldenrod: [218 / 255, 165 / 255, 32 / 255],\n  gray: [128 / 255, 128 / 255, 128 / 255],\n  green: [0, 128 / 255, 0],\n  greenyellow: [173 / 255, 1, 47 / 255],\n  grey: [128 / 255, 128 / 255, 128 / 255],\n  honeydew: [240 / 255, 1, 240 / 255],\n  hotpink: [1, 105 / 255, 180 / 255],\n  indianred: [205 / 255, 92 / 255, 92 / 255],\n  indigo: [75 / 255, 0, 130 / 255],\n  ivory: [1, 1, 240 / 255],\n  khaki: [240 / 255, 230 / 255, 140 / 255],\n  lavender: [230 / 255, 230 / 255, 250 / 255],\n  lavenderblush: [1, 240 / 255, 245 / 255],\n  lawngreen: [124 / 255, 252 / 255, 0],\n  lemonchiffon: [1, 250 / 255, 205 / 255],\n  lightblue: [173 / 255, 216 / 255, 230 / 255],\n  lightcoral: [240 / 255, 128 / 255, 128 / 255],\n  lightcyan: [224 / 255, 1, 1],\n  lightgoldenrodyellow: [250 / 255, 250 / 255, 210 / 255],\n  lightgray: [211 / 255, 211 / 255, 211 / 255],\n  lightgreen: [144 / 255, 238 / 255, 144 / 255],\n  lightgrey: [211 / 255, 211 / 255, 211 / 255],\n  lightpink: [1, 182 / 255, 193 / 255],\n  lightsalmon: [1, 160 / 255, 122 / 255],\n  lightseagreen: [32 / 255, 178 / 255, 170 / 255],\n  lightskyblue: [135 / 255, 206 / 255, 250 / 255],\n  lightslategray: [119 / 255, 136 / 255, 153 / 255],\n  lightslategrey: [119 / 255, 136 / 255, 153 / 255],\n  lightsteelblue: [176 / 255, 196 / 255, 222 / 255],\n  lightyellow: [1, 1, 224 / 255],\n  lime: [0, 1, 0],\n  limegreen: [50 / 255, 205 / 255, 50 / 255],\n  linen: [250 / 255, 240 / 255, 230 / 255],\n  magenta: [1, 0, 1],\n  maroon: [128 / 255, 0, 0],\n  mediumaquamarine: [102 / 255, 205 / 255, 170 / 255],\n  mediumblue: [0, 0, 205 / 255],\n  mediumorchid: [186 / 255, 85 / 255, 211 / 255],\n  mediumpurple: [147 / 255, 112 / 255, 219 / 255],\n  mediumseagreen: [60 / 255, 179 / 255, 113 / 255],\n  mediumslateblue: [123 / 255, 104 / 255, 238 / 255],\n  mediumspringgreen: [0, 250 / 255, 154 / 255],\n  mediumturquoise: [72 / 255, 209 / 255, 204 / 255],\n  mediumvioletred: [199 / 255, 21 / 255, 133 / 255],\n  midnightblue: [25 / 255, 25 / 255, 112 / 255],\n  mintcream: [245 / 255, 1, 250 / 255],\n  mistyrose: [1, 228 / 255, 225 / 255],\n  moccasin: [1, 228 / 255, 181 / 255],\n  navajowhite: [1, 222 / 255, 173 / 255],\n  navy: [0, 0, 128 / 255],\n  oldlace: [253 / 255, 245 / 255, 230 / 255],\n  olive: [128 / 255, 128 / 255, 0],\n  olivedrab: [107 / 255, 142 / 255, 35 / 255],\n  orange: [1, 165 / 255, 0],\n  orangered: [1, 69 / 255, 0],\n  orchid: [218 / 255, 112 / 255, 214 / 255],\n  palegoldenrod: [238 / 255, 232 / 255, 170 / 255],\n  palegreen: [152 / 255, 251 / 255, 152 / 255],\n  paleturquoise: [175 / 255, 238 / 255, 238 / 255],\n  palevioletred: [219 / 255, 112 / 255, 147 / 255],\n  papayawhip: [1, 239 / 255, 213 / 255],\n  peachpuff: [1, 218 / 255, 185 / 255],\n  peru: [205 / 255, 133 / 255, 63 / 255],\n  pink: [1, 192 / 255, 203 / 255],\n  plum: [221 / 255, 160 / 255, 221 / 255],\n  powderblue: [176 / 255, 224 / 255, 230 / 255],\n  purple: [128 / 255, 0, 128 / 255],\n  rebeccapurple: [102 / 255, 51 / 255, 153 / 255],\n  red: [1, 0, 0],\n  rosybrown: [188 / 255, 143 / 255, 143 / 255],\n  royalblue: [65 / 255, 105 / 255, 225 / 255],\n  saddlebrown: [139 / 255, 69 / 255, 19 / 255],\n  salmon: [250 / 255, 128 / 255, 114 / 255],\n  sandybrown: [244 / 255, 164 / 255, 96 / 255],\n  seagreen: [46 / 255, 139 / 255, 87 / 255],\n  seashell: [1, 245 / 255, 238 / 255],\n  sienna: [160 / 255, 82 / 255, 45 / 255],\n  silver: [192 / 255, 192 / 255, 192 / 255],\n  skyblue: [135 / 255, 206 / 255, 235 / 255],\n  slateblue: [106 / 255, 90 / 255, 205 / 255],\n  slategray: [112 / 255, 128 / 255, 144 / 255],\n  slategrey: [112 / 255, 128 / 255, 144 / 255],\n  snow: [1, 250 / 255, 250 / 255],\n  springgreen: [0, 1, 127 / 255],\n  steelblue: [70 / 255, 130 / 255, 180 / 255],\n  tan: [210 / 255, 180 / 255, 140 / 255],\n  teal: [0, 128 / 255, 128 / 255],\n  thistle: [216 / 255, 191 / 255, 216 / 255],\n  tomato: [1, 99 / 255, 71 / 255],\n  turquoise: [64 / 255, 224 / 255, 208 / 255],\n  violet: [238 / 255, 130 / 255, 238 / 255],\n  wheat: [245 / 255, 222 / 255, 179 / 255],\n  white: [1, 1, 1],\n  whitesmoke: [245 / 255, 245 / 255, 245 / 255],\n  yellow: [1, 1, 0],\n  yellowgreen: [154 / 255, 205 / 255, 50 / 255]\n};\nlet oe = Array(3).fill(\"<percentage> | <number>[0, 255]\"), he = Array(3).fill(\"<number>[0, 255]\");\nvar at = new x({\n  id: \"srgb\",\n  name: \"sRGB\",\n  base: Ie,\n  fromBase: (i) => i.map((t) => {\n    let e = t < 0 ? -1 : 1, r = t * e;\n    return r > 31308e-7 ? e * (1.055 * r ** (1 / 2.4) - 0.055) : 12.92 * t;\n  }),\n  toBase: (i) => i.map((t) => {\n    let e = t < 0 ? -1 : 1, r = t * e;\n    return r < 0.04045 ? t / 12.92 : e * ((r + 0.055) / 1.055) ** 2.4;\n  }),\n  formats: {\n    rgb: {\n      coords: oe\n    },\n    rgb_number: {\n      name: \"rgb\",\n      commas: !0,\n      coords: he,\n      noAlpha: !0\n    },\n    color: {\n      /* use defaults */\n    },\n    rgba: {\n      coords: oe,\n      commas: !0,\n      lastAlpha: !0\n    },\n    rgba_number: {\n      name: \"rgba\",\n      commas: !0,\n      coords: he\n    },\n    hex: {\n      type: \"custom\",\n      toGamut: !0,\n      test: (i) => /^#([a-f0-9]{3,4}){1,2}$/i.test(i),\n      parse(i) {\n        i.length <= 5 && (i = i.replace(/[a-f0-9]/gi, \"$&$&\"));\n        let t = [];\n        return i.replace(/[a-f0-9]{2}/gi, (e) => {\n          t.push(parseInt(e, 16) / 255);\n        }), {\n          spaceId: \"srgb\",\n          coords: t.slice(0, 3),\n          alpha: t.slice(3)[0]\n        };\n      },\n      serialize: (i, t, {\n        collapse: e = !0\n        // collapse to 3-4 digit hex when possible?\n      } = {}) => {\n        t < 1 && i.push(t), i = i.map((s) => Math.round(s * 255));\n        let r = e && i.every((s) => s % 17 === 0);\n        return \"#\" + i.map((s) => r ? (s / 17).toString(16) : s.toString(16).padStart(2, \"0\")).join(\"\");\n      }\n    },\n    keyword: {\n      type: \"custom\",\n      test: (i) => /^[a-z]+$/i.test(i),\n      parse(i) {\n        i = i.toLowerCase();\n        let t = { spaceId: \"srgb\", coords: null, alpha: 1 };\n        if (i === \"transparent\" ? (t.coords = ne.black, t.alpha = 0) : t.coords = ne[i], t.coords)\n          return t;\n      }\n    }\n  }\n}), Ue = new x({\n  id: \"p3\",\n  name: \"P3\",\n  base: je,\n  // Gamma encoding/decoding is the same as sRGB\n  fromBase: at.fromBase,\n  toBase: at.toBase,\n  formats: {\n    color: {\n      id: \"display-p3\"\n    }\n  }\n});\nF.display_space = at;\nif (typeof CSS < \"u\" && CSS.supports)\n  for (let i of [T, Xe, Ue]) {\n    let t = i.getMinCoords(), r = wt({ space: i, coords: t, alpha: 1 });\n    if (CSS.supports(\"color\", r)) {\n      F.display_space = i;\n      break;\n    }\n  }\nfunction Bi(i, { space: t = F.display_space, ...e } = {}) {\n  let r = wt(i, e);\n  if (typeof CSS > \"u\" || CSS.supports(\"color\", r) || !F.display_space)\n    r = new String(r), r.color = i;\n  else {\n    let a = A(i, t);\n    r = new String(wt(a, e)), r.color = a;\n  }\n  return r;\n}\nfunction qe(i, t, e = \"lab\") {\n  e = f.get(e);\n  let r = e.from(i), a = e.from(t);\n  return Math.sqrt(r.reduce((s, n, o) => {\n    let h = a[o];\n    return isNaN(n) || isNaN(h) ? s : s + (h - n) ** 2;\n  }, 0));\n}\nfunction zi(i, t) {\n  return i = g(i), t = g(t), i.space === t.space && i.alpha === t.alpha && i.coords.every((e, r) => e === t.coords[r]);\n}\nfunction U(i) {\n  return P(i, [L, \"y\"]);\n}\nfunction Ge(i, t) {\n  j(i, [L, \"y\"], t);\n}\nfunction Fi(i) {\n  Object.defineProperty(i.prototype, \"luminance\", {\n    get() {\n      return U(this);\n    },\n    set(t) {\n      Ge(this, t);\n    }\n  });\n}\nvar Oi = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  getLuminance: U,\n  register: Fi,\n  setLuminance: Ge\n});\nfunction Yi(i, t) {\n  i = g(i), t = g(t);\n  let e = Math.max(U(i), 0), r = Math.max(U(t), 0);\n  return r > e && ([e, r] = [r, e]), (e + 0.05) / (r + 0.05);\n}\nconst $i = 0.56, Xi = 0.57, ji = 0.62, Ii = 0.65, le = 0.022, Ui = 1.414, qi = 0.1, Gi = 5e-4, Zi = 1.14, ue = 0.027, Vi = 1.14;\nfunction ce(i) {\n  return i >= le ? i : i + (le - i) ** Ui;\n}\nfunction H(i) {\n  let t = i < 0 ? -1 : 1, e = Math.abs(i);\n  return t * Math.pow(e, 2.4);\n}\nfunction Hi(i, t) {\n  t = g(t), i = g(i);\n  let e, r, a, s, n, o;\n  t = A(t, \"srgb\"), [s, n, o] = t.coords;\n  let h = H(s) * 0.2126729 + H(n) * 0.7151522 + H(o) * 0.072175;\n  i = A(i, \"srgb\"), [s, n, o] = i.coords;\n  let l = H(s) * 0.2126729 + H(n) * 0.7151522 + H(o) * 0.072175, u = ce(h), c = ce(l), d = c > u;\n  return Math.abs(c - u) < Gi ? r = 0 : d ? (e = c ** $i - u ** Xi, r = e * Zi) : (e = c ** Ii - u ** ji, r = e * Vi), Math.abs(r) < qi ? a = 0 : r > 0 ? a = r - ue : a = r + ue, a * 100;\n}\nfunction Wi(i, t) {\n  i = g(i), t = g(t);\n  let e = Math.max(U(i), 0), r = Math.max(U(t), 0);\n  r > e && ([e, r] = [r, e]);\n  let a = e + r;\n  return a === 0 ? 0 : (e - r) / a;\n}\nconst Ni = 5e4;\nfunction Ji(i, t) {\n  i = g(i), t = g(t);\n  let e = Math.max(U(i), 0), r = Math.max(U(t), 0);\n  return r > e && ([e, r] = [r, e]), r === 0 ? Ni : (e - r) / r;\n}\nfunction Qi(i, t) {\n  i = g(i), t = g(t);\n  let e = P(i, [T, \"l\"]), r = P(t, [T, \"l\"]);\n  return Math.abs(e - r);\n}\nconst Ki = 216 / 24389, de = 24 / 116, ct = 24389 / 27;\nlet Et = R.D65;\nvar Xt = new f({\n  id: \"lab-d65\",\n  name: \"Lab D65\",\n  coords: {\n    l: {\n      refRange: [0, 100],\n      name: \"L\"\n    },\n    a: {\n      refRange: [-125, 125]\n    },\n    b: {\n      refRange: [-125, 125]\n    }\n  },\n  // Assuming XYZ is relative to D65, convert to CIE Lab\n  // from CIE standard, which now defines these as a rational fraction\n  white: Et,\n  base: L,\n  // Convert D65-adapted XYZ to Lab\n  //  CIE 15.3:2004 section 8.2.1.1\n  fromBase(i) {\n    let e = i.map((r, a) => r / Et[a]).map((r) => r > Ki ? Math.cbrt(r) : (ct * r + 16) / 116);\n    return [\n      116 * e[1] - 16,\n      // L\n      500 * (e[0] - e[1]),\n      // a\n      200 * (e[1] - e[2])\n      // b\n    ];\n  },\n  // Convert Lab to D65-adapted XYZ\n  // Same result as CIE 15.3:2004 Appendix D although the derivation is different\n  // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n  toBase(i) {\n    let t = [];\n    return t[1] = (i[0] + 16) / 116, t[0] = i[1] / 500 + t[1], t[2] = t[1] - i[2] / 200, [\n      t[0] > de ? Math.pow(t[0], 3) : (116 * t[0] - 16) / ct,\n      i[0] > 8 ? Math.pow((i[0] + 16) / 116, 3) : i[0] / ct,\n      t[2] > de ? Math.pow(t[2], 3) : (116 * t[2] - 16) / ct\n    ].map((r, a) => r * Et[a]);\n  },\n  formats: {\n    \"lab-d65\": {\n      coords: [\"<number> | <percentage>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"]\n    }\n  }\n});\nconst Rt = Math.pow(5, 0.5) * 0.5 + 0.5;\nfunction tr(i, t) {\n  i = g(i), t = g(t);\n  let e = P(i, [Xt, \"l\"]), r = P(t, [Xt, \"l\"]), a = Math.abs(Math.pow(e, Rt) - Math.pow(r, Rt)), s = Math.pow(a, 1 / Rt) * Math.SQRT2 - 40;\n  return s < 7.5 ? 0 : s;\n}\nvar yt = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  contrastAPCA: Hi,\n  contrastDeltaPhi: tr,\n  contrastLstar: Qi,\n  contrastMichelson: Wi,\n  contrastWCAG21: Yi,\n  contrastWeber: Ji\n});\nfunction er(i, t, e = {}) {\n  st(e) && (e = { algorithm: e });\n  let { algorithm: r, ...a } = e;\n  if (!r) {\n    let s = Object.keys(yt).map((n) => n.replace(/^contrast/, \"\")).join(\", \");\n    throw new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${s}`);\n  }\n  i = g(i), t = g(t);\n  for (let s in yt)\n    if (\"contrast\" + r.toLowerCase() === s.toLowerCase())\n      return yt[s](i, t, a);\n  throw new TypeError(`Unknown contrast algorithm: ${r}`);\n}\nfunction Ze(i) {\n  let [t, e, r] = nt(i, L), a = t + 15 * e + 3 * r;\n  return [4 * t / a, 9 * e / a];\n}\nfunction Ve(i) {\n  let [t, e, r] = nt(i, L), a = t + e + r;\n  return [t / a, e / a];\n}\nfunction ir(i) {\n  Object.defineProperty(i.prototype, \"uv\", {\n    get() {\n      return Ze(this);\n    }\n  }), Object.defineProperty(i.prototype, \"xy\", {\n    get() {\n      return Ve(this);\n    }\n  });\n}\nvar rr = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  register: ir,\n  uv: Ze,\n  xy: Ve\n});\nfunction ar(i, t) {\n  return qe(i, t, \"lab\");\n}\nconst sr = Math.PI, fe = sr / 180;\nfunction nr(i, t, { l: e = 2, c: r = 1 } = {}) {\n  let [a, s, n] = T.from(i), [, o, h] = it.from(T, [a, s, n]), [l, u, c] = T.from(t), d = it.from(T, [l, u, c])[1];\n  o < 0 && (o = 0), d < 0 && (d = 0);\n  let m = a - l, p = o - d, y = s - u, b = n - c, k = y ** 2 + b ** 2 - p ** 2, w = 0.511;\n  a >= 16 && (w = 0.040975 * a / (1 + 0.01765 * a));\n  let D = 0.0638 * o / (1 + 0.0131 * o) + 0.638, S;\n  Number.isNaN(h) && (h = 0), h >= 164 && h <= 345 ? S = 0.56 + Math.abs(0.2 * Math.cos((h + 168) * fe)) : S = 0.36 + Math.abs(0.4 * Math.cos((h + 35) * fe));\n  let E = Math.pow(o, 4), q = Math.sqrt(E / (E + 1900)), Y = D * (q * S + 1 - q), B = (m / (e * w)) ** 2;\n  return B += (p / (r * D)) ** 2, B += k / Y ** 2, Math.sqrt(B);\n}\nconst me = 203;\nvar Zt = new f({\n  // Absolute CIE XYZ, with a D65 whitepoint,\n  // as used in most HDR colorspaces as a starting point.\n  // SDR spaces are converted per BT.2048\n  // so that diffuse, media white is 203 cd/m²\n  id: \"xyz-abs-d65\",\n  name: \"Absolute XYZ D65\",\n  coords: {\n    x: {\n      refRange: [0, 9504.7],\n      name: \"Xa\"\n    },\n    y: {\n      refRange: [0, 1e4],\n      name: \"Ya\"\n    },\n    z: {\n      refRange: [0, 10888.3],\n      name: \"Za\"\n    }\n  },\n  base: L,\n  fromBase(i) {\n    return i.map((t) => Math.max(t * me, 0));\n  },\n  toBase(i) {\n    return i.map((t) => Math.max(t / me, 0));\n  }\n});\nconst dt = 1.15, ft = 0.66, ge = 2610 / 2 ** 14, or = 2 ** 14 / 2610, pe = 3424 / 2 ** 12, _e = 2413 / 2 ** 7, ye = 2392 / 2 ** 7, hr = 1.7 * 2523 / 2 ** 5, be = 2 ** 5 / (1.7 * 2523), mt = -0.56, Bt = 16295499532821565e-27, lr = [\n  [0.41478972, 0.579999, 0.014648],\n  [-0.20151, 1.120649, 0.0531008],\n  [-0.0166008, 0.2648, 0.6684799]\n], ur = [\n  [1.9242264357876067, -1.0047923125953657, 0.037651404030618],\n  [0.35031676209499907, 0.7264811939316552, -0.06538442294808501],\n  [-0.09098281098284752, -0.3127282905230739, 1.5227665613052603]\n], cr = [\n  [0.5, 0.5, 0],\n  [3.524, -4.066708, 0.542708],\n  [0.199076, 1.096799, -1.295875]\n], dr = [\n  [1, 0.1386050432715393, 0.05804731615611886],\n  [0.9999999999999999, -0.1386050432715393, -0.05804731615611886],\n  [0.9999999999999998, -0.09601924202631895, -0.8118918960560388]\n];\nvar He = new f({\n  id: \"jzazbz\",\n  name: \"Jzazbz\",\n  coords: {\n    jz: {\n      refRange: [0, 1],\n      name: \"Jz\"\n    },\n    az: {\n      refRange: [-0.5, 0.5]\n    },\n    bz: {\n      refRange: [-0.5, 0.5]\n    }\n  },\n  base: Zt,\n  fromBase(i) {\n    let [t, e, r] = i, a = dt * t - (dt - 1) * r, s = ft * e - (ft - 1) * t, o = v(lr, [a, s, r]).map(function(d) {\n      let m = pe + _e * (d / 1e4) ** ge, p = 1 + ye * (d / 1e4) ** ge;\n      return (m / p) ** hr;\n    }), [h, l, u] = v(cr, o);\n    return [(1 + mt) * h / (1 + mt * h) - Bt, l, u];\n  },\n  toBase(i) {\n    let [t, e, r] = i, a = (t + Bt) / (1 + mt - mt * (t + Bt)), n = v(dr, [a, e, r]).map(function(d) {\n      let m = pe - d ** be, p = ye * d ** be - _e;\n      return 1e4 * (m / p) ** or;\n    }), [o, h, l] = v(ur, n), u = (o + (dt - 1) * l) / dt, c = (h + (ft - 1) * u) / ft;\n    return [u, c, l];\n  },\n  formats: {\n    // https://drafts.csswg.org/css-color-hdr/#Jzazbz\n    color: {}\n  }\n}), jt = new f({\n  id: \"jzczhz\",\n  name: \"JzCzHz\",\n  coords: {\n    jz: {\n      refRange: [0, 1],\n      name: \"Jz\"\n    },\n    cz: {\n      refRange: [0, 1],\n      name: \"Chroma\"\n    },\n    hz: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    }\n  },\n  base: He,\n  fromBase(i) {\n    let [t, e, r] = i, a;\n    const s = 2e-4;\n    return Math.abs(e) < s && Math.abs(r) < s ? a = NaN : a = Math.atan2(r, e) * 180 / Math.PI, [\n      t,\n      // Jz is still Jz\n      Math.sqrt(e ** 2 + r ** 2),\n      // Chroma\n      Ct(a)\n      // Hue, in degrees [0 to 360)\n    ];\n  },\n  toBase(i) {\n    return [\n      i[0],\n      // Jz is still Jz\n      i[1] * Math.cos(i[2] * Math.PI / 180),\n      // az\n      i[1] * Math.sin(i[2] * Math.PI / 180)\n      // bz\n    ];\n  },\n  formats: {\n    color: {}\n  }\n});\nfunction fr(i, t) {\n  let [e, r, a] = jt.from(i), [s, n, o] = jt.from(t), h = e - s, l = r - n;\n  Number.isNaN(a) && Number.isNaN(o) ? (a = 0, o = 0) : Number.isNaN(a) ? a = o : Number.isNaN(o) && (o = a);\n  let u = a - o, c = 2 * Math.sqrt(r * n) * Math.sin(u / 2 * (Math.PI / 180));\n  return Math.sqrt(h ** 2 + l ** 2 + c ** 2);\n}\nconst We = 3424 / 4096, Ne = 2413 / 128, Je = 2392 / 128, Me = 2610 / 16384, mr = 2523 / 32, gr = 16384 / 2610, ve = 32 / 2523, pr = [\n  [0.3592, 0.6976, -0.0358],\n  [-0.1922, 1.1004, 0.0755],\n  [7e-3, 0.0749, 0.8434]\n], _r = [\n  [2048 / 4096, 2048 / 4096, 0],\n  [6610 / 4096, -13613 / 4096, 7003 / 4096],\n  [17933 / 4096, -17390 / 4096, -543 / 4096]\n], yr = [\n  [0.9999888965628402, 0.008605050147287059, 0.11103437159861648],\n  [1.00001110343716, -0.008605050147287059, -0.11103437159861648],\n  [1.0000320633910054, 0.56004913547279, -0.3206339100541203]\n], br = [\n  [2.0701800566956137, -1.326456876103021, 0.20661600684785517],\n  [0.3649882500326575, 0.6804673628522352, -0.04542175307585323],\n  [-0.04959554223893211, -0.04942116118675749, 1.1879959417328034]\n];\nvar It = new f({\n  id: \"ictcp\",\n  name: \"ICTCP\",\n  // From BT.2100-2 page 7:\n  // During production, signal values are expected to exceed the\n  // range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n  // signal degradation during cascaded processing. Such values of E′,\n  // below 0.0 or exceeding 1.0, should not be clipped during production\n  // and exchange.\n  // Values below 0.0 should not be clipped in reference displays (even\n  // though they represent “negative” light) to allow the black level of\n  // the signal (LB) to be properly set using test signals known as “PLUGE”\n  coords: {\n    i: {\n      refRange: [0, 1],\n      // Constant luminance,\n      name: \"I\"\n    },\n    ct: {\n      refRange: [-0.5, 0.5],\n      // Full BT.2020 gamut in range [-0.5, 0.5]\n      name: \"CT\"\n    },\n    cp: {\n      refRange: [-0.5, 0.5],\n      name: \"CP\"\n    }\n  },\n  base: Zt,\n  fromBase(i) {\n    let t = v(pr, i);\n    return Mr(t);\n  },\n  toBase(i) {\n    let t = vr(i);\n    return v(br, t);\n  },\n  formats: {\n    color: {}\n  }\n});\nfunction Mr(i) {\n  let t = i.map(function(e) {\n    let r = We + Ne * (e / 1e4) ** Me, a = 1 + Je * (e / 1e4) ** Me;\n    return (r / a) ** mr;\n  });\n  return v(_r, t);\n}\nfunction vr(i) {\n  return v(yr, i).map(function(r) {\n    let a = Math.max(r ** ve - We, 0), s = Ne - Je * r ** ve;\n    return 1e4 * (a / s) ** gr;\n  });\n}\nfunction kr(i, t) {\n  let [e, r, a] = It.from(i), [s, n, o] = It.from(t);\n  return 720 * Math.sqrt((e - s) ** 2 + 0.25 * (r - n) ** 2 + (a - o) ** 2);\n}\nconst wr = [\n  [0.8190224432164319, 0.3619062562801221, -0.12887378261216414],\n  [0.0329836671980271, 0.9292868468965546, 0.03614466816999844],\n  [0.048177199566046255, 0.26423952494422764, 0.6335478258136937]\n], xr = [\n  [1.2268798733741557, -0.5578149965554813, 0.28139105017721583],\n  [-0.04057576262431372, 1.1122868293970594, -0.07171106666151701],\n  [-0.07637294974672142, -0.4214933239627914, 1.5869240244272418]\n], Sr = [\n  [0.2104542553, 0.793617785, -0.0040720468],\n  [1.9779984951, -2.428592205, 0.4505937099],\n  [0.0259040371, 0.7827717662, -0.808675766]\n], Cr = [\n  [0.9999999984505198, 0.39633779217376786, 0.2158037580607588],\n  [1.0000000088817609, -0.10556134232365635, -0.06385417477170591],\n  [1.0000000546724108, -0.08948418209496575, -1.2914855378640917]\n];\nvar xt = new f({\n  id: \"oklab\",\n  name: \"Oklab\",\n  coords: {\n    l: {\n      refRange: [0, 1],\n      name: \"L\"\n    },\n    a: {\n      refRange: [-0.4, 0.4]\n    },\n    b: {\n      refRange: [-0.4, 0.4]\n    }\n  },\n  // Note that XYZ is relative to D65\n  white: \"D65\",\n  base: L,\n  fromBase(i) {\n    let e = v(wr, i).map((r) => Math.cbrt(r));\n    return v(Sr, e);\n  },\n  toBase(i) {\n    let e = v(Cr, i).map((r) => r ** 3);\n    return v(xr, e);\n  },\n  formats: {\n    oklab: {\n      coords: [\"<percentage> | <number>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"]\n    }\n  }\n});\nfunction Tr(i, t) {\n  let [e, r, a] = xt.from(i), [s, n, o] = xt.from(t), h = e - s, l = r - n, u = a - o;\n  return Math.sqrt(h ** 2 + l ** 2 + u ** 2);\n}\nvar St = {\n  deltaE76: ar,\n  deltaECMC: nr,\n  deltaE2000: $t,\n  deltaEJz: fr,\n  deltaEITP: kr,\n  deltaEOK: Tr\n};\nfunction tt(i, t, e = {}) {\n  st(e) && (e = { method: e });\n  let { method: r = F.deltaE, ...a } = e;\n  i = g(i), t = g(t);\n  for (let s in St)\n    if (\"deltae\" + r.toLowerCase() === s.toLowerCase())\n      return St[s](i, t, a);\n  throw new TypeError(`Unknown deltaE method: ${r}`);\n}\nfunction Dr(i, t = 0.25) {\n  let r = [f.get(\"oklch\", \"lch\"), \"l\"];\n  return j(i, r, (a) => a * (1 + t));\n}\nfunction Ar(i, t = 0.25) {\n  let r = [f.get(\"oklch\", \"lch\"), \"l\"];\n  return j(i, r, (a) => a * (1 - t));\n}\nvar Lr = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  darken: Ar,\n  lighten: Dr\n});\nfunction Qe(i, t, e = 0.5, r = {}) {\n  [i, t] = [g(i), g(t)], $(e) === \"object\" && ([e, r] = [0.5, e]);\n  let { space: a, outputSpace: s, premultiplied: n } = r;\n  return ot(i, t, { space: a, outputSpace: s, premultiplied: n })(e);\n}\nfunction Ke(i, t, e = {}) {\n  let r;\n  Vt(i) && ([r, e] = [i, t], [i, t] = r.rangeArgs.colors);\n  let {\n    maxDeltaE: a,\n    deltaEMethod: s,\n    steps: n = 2,\n    maxSteps: o = 1e3,\n    ...h\n  } = e;\n  r || ([i, t] = [g(i), g(t)], r = ot(i, t, h));\n  let l = tt(i, t), u = a > 0 ? Math.max(n, Math.ceil(l / a) + 1) : n, c = [];\n  if (o !== void 0 && (u = Math.min(u, o)), u === 1)\n    c = [{ p: 0.5, color: r(0.5) }];\n  else {\n    let d = 1 / (u - 1);\n    c = Array.from({ length: u }, (m, p) => {\n      let y = p * d;\n      return { p: y, color: r(y) };\n    });\n  }\n  if (a > 0) {\n    let d = c.reduce((m, p, y) => {\n      if (y === 0)\n        return 0;\n      let b = tt(p.color, c[y - 1].color, s);\n      return Math.max(m, b);\n    }, 0);\n    for (; d > a; ) {\n      d = 0;\n      for (let m = 1; m < c.length && c.length < o; m++) {\n        let p = c[m - 1], y = c[m], b = (y.p + p.p) / 2, k = r(b);\n        d = Math.max(d, tt(k, p.color), tt(k, y.color)), c.splice(m, 0, { p: b, color: r(b) }), m++;\n      }\n    }\n  }\n  return c = c.map((d) => d.color), c;\n}\nfunction ot(i, t, e = {}) {\n  if (Vt(i)) {\n    let [h, l] = [i, t];\n    return ot(...h.rangeArgs.colors, { ...h.rangeArgs.options, ...l });\n  }\n  let { space: r, outputSpace: a, progression: s, premultiplied: n } = e;\n  i = g(i), t = g(t), i = rt(i), t = rt(t);\n  let o = { colors: [i, t], options: e };\n  if (r ? r = f.get(r) : r = f.registry[F.interpolationSpace] || i.space, a = a ? f.get(a) : r, i = A(i, r), t = A(t, r), i = I(i), t = I(t), r.coords.h && r.coords.h.type === \"angle\") {\n    let h = e.hue = e.hue || \"shorter\", l = [r, \"h\"], [u, c] = [P(i, l), P(t, l)];\n    [u, c] = Ci(h, [u, c]), j(i, l, u), j(t, l, c);\n  }\n  return n && (i.coords = i.coords.map((h) => h * i.alpha), t.coords = t.coords.map((h) => h * t.alpha)), Object.assign((h) => {\n    h = s ? s(h) : h;\n    let l = i.coords.map((d, m) => {\n      let p = t.coords[m];\n      return Mt(d, p, h);\n    }), u = Mt(i.alpha, t.alpha, h), c = { space: r, coords: l, alpha: u };\n    return n && (c.coords = c.coords.map((d) => d / u)), a !== r && (c = A(c, a)), c;\n  }, {\n    rangeArgs: o\n  });\n}\nfunction Vt(i) {\n  return $(i) === \"function\" && !!i.rangeArgs;\n}\nF.interpolationSpace = \"lab\";\nfunction Pr(i) {\n  i.defineFunction(\"mix\", Qe, { returns: \"color\" }), i.defineFunction(\"range\", ot, { returns: \"function<color>\" }), i.defineFunction(\"steps\", Ke, { returns: \"array<color>\" });\n}\nvar Er = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  isRange: Vt,\n  mix: Qe,\n  range: ot,\n  register: Pr,\n  steps: Ke\n}), ti = new f({\n  id: \"hsl\",\n  name: \"HSL\",\n  coords: {\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    },\n    s: {\n      range: [0, 100],\n      name: \"Saturation\"\n    },\n    l: {\n      range: [0, 100],\n      name: \"Lightness\"\n    }\n  },\n  base: at,\n  // Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB\n  fromBase: (i) => {\n    let t = Math.max(...i), e = Math.min(...i), [r, a, s] = i, [n, o, h] = [NaN, 0, (e + t) / 2], l = t - e;\n    if (l !== 0) {\n      switch (o = h === 0 || h === 1 ? 0 : (t - h) / Math.min(h, 1 - h), t) {\n        case r:\n          n = (a - s) / l + (a < s ? 6 : 0);\n          break;\n        case a:\n          n = (s - r) / l + 2;\n          break;\n        case s:\n          n = (r - a) / l + 4;\n      }\n      n = n * 60;\n    }\n    return [n, o * 100, h * 100];\n  },\n  // Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n  toBase: (i) => {\n    let [t, e, r] = i;\n    t = t % 360, t < 0 && (t += 360), e /= 100, r /= 100;\n    function a(s) {\n      let n = (s + t / 30) % 12, o = e * Math.min(r, 1 - r);\n      return r - o * Math.max(-1, Math.min(n - 3, 9 - n, 1));\n    }\n    return [a(0), a(8), a(4)];\n  },\n  formats: {\n    hsl: {\n      toGamut: !0,\n      coords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"]\n    },\n    hsla: {\n      coords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n      commas: !0,\n      lastAlpha: !0\n    }\n  }\n}), ei = new f({\n  id: \"hsv\",\n  name: \"HSV\",\n  coords: {\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    },\n    s: {\n      range: [0, 100],\n      name: \"Saturation\"\n    },\n    v: {\n      range: [0, 100],\n      name: \"Value\"\n    }\n  },\n  base: ti,\n  // https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n  fromBase(i) {\n    let [t, e, r] = i;\n    e /= 100, r /= 100;\n    let a = r + e * Math.min(r, 1 - r);\n    return [\n      t,\n      // h is the same\n      a === 0 ? 0 : 200 * (1 - r / a),\n      // s\n      100 * a\n    ];\n  },\n  // https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n  toBase(i) {\n    let [t, e, r] = i;\n    e /= 100, r /= 100;\n    let a = r * (1 - e / 2);\n    return [\n      t,\n      // h is the same\n      a === 0 || a === 1 ? 0 : (r - a) / Math.min(a, 1 - a) * 100,\n      a * 100\n    ];\n  },\n  formats: {\n    color: {\n      toGamut: !0\n    }\n  }\n}), Rr = new f({\n  id: \"hwb\",\n  name: \"HWB\",\n  coords: {\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    },\n    w: {\n      range: [0, 100],\n      name: \"Whiteness\"\n    },\n    b: {\n      range: [0, 100],\n      name: \"Blackness\"\n    }\n  },\n  base: ei,\n  fromBase(i) {\n    let [t, e, r] = i;\n    return [t, r * (100 - e) / 100, 100 - r];\n  },\n  toBase(i) {\n    let [t, e, r] = i;\n    e /= 100, r /= 100;\n    let a = e + r;\n    if (a >= 1) {\n      let o = e / a;\n      return [t, 0, o * 100];\n    }\n    let s = 1 - r, n = s === 0 ? 0 : 1 - e / s;\n    return [t, n * 100, s * 100];\n  },\n  formats: {\n    hwb: {\n      toGamut: !0,\n      coords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"]\n    }\n  }\n});\nconst Br = [\n  [0.5766690429101305, 0.1855582379065463, 0.1882286462349947],\n  [0.29734497525053605, 0.6273635662554661, 0.07529145849399788],\n  [0.02703136138641234, 0.07068885253582723, 0.9913375368376388]\n], zr = [\n  [2.0415879038107465, -0.5650069742788596, -0.34473135077832956],\n  [-0.9692436362808795, 1.8759675015077202, 0.04155505740717557],\n  [0.013444280632031142, -0.11836239223101838, 1.0151749943912054]\n];\nvar ii = new x({\n  id: \"a98rgb-linear\",\n  name: \"Linear Adobe® 98 RGB compatible\",\n  white: \"D65\",\n  toXYZ_M: Br,\n  fromXYZ_M: zr\n}), Fr = new x({\n  id: \"a98rgb\",\n  name: \"Adobe® 98 RGB compatible\",\n  base: ii,\n  toBase: (i) => i.map((t) => Math.pow(Math.abs(t), 563 / 256) * Math.sign(t)),\n  fromBase: (i) => i.map((t) => Math.pow(Math.abs(t), 256 / 563) * Math.sign(t)),\n  formats: {\n    color: {\n      id: \"a98-rgb\"\n    }\n  }\n});\nconst Or = [\n  [0.7977604896723027, 0.13518583717574031, 0.0313493495815248],\n  [0.2880711282292934, 0.7118432178101014, 8565396060525902e-20],\n  [0, 0, 0.8251046025104601]\n], Yr = [\n  [1.3457989731028281, -0.25558010007997534, -0.05110628506753401],\n  [-0.5446224939028347, 1.5082327413132781, 0.02053603239147973],\n  [0, 0, 1.2119675456389454]\n];\nvar ri = new x({\n  id: \"prophoto-linear\",\n  name: \"Linear ProPhoto\",\n  white: \"D50\",\n  base: Gt,\n  toXYZ_M: Or,\n  fromXYZ_M: Yr\n});\nconst $r = 1 / 512, Xr = 16 / 512;\nvar jr = new x({\n  id: \"prophoto\",\n  name: \"ProPhoto\",\n  base: ri,\n  toBase(i) {\n    return i.map((t) => t < Xr ? t / 16 : t ** 1.8);\n  },\n  fromBase(i) {\n    return i.map((t) => t >= $r ? t ** (1 / 1.8) : 16 * t);\n  },\n  formats: {\n    color: {\n      id: \"prophoto-rgb\"\n    }\n  }\n}), Ir = new f({\n  id: \"oklch\",\n  name: \"Oklch\",\n  coords: {\n    l: {\n      refRange: [0, 1],\n      name: \"Lightness\"\n    },\n    c: {\n      refRange: [0, 0.4],\n      name: \"Chroma\"\n    },\n    h: {\n      refRange: [0, 360],\n      type: \"angle\",\n      name: \"Hue\"\n    }\n  },\n  white: \"D65\",\n  base: xt,\n  fromBase(i) {\n    let [t, e, r] = i, a;\n    const s = 2e-4;\n    return Math.abs(e) < s && Math.abs(r) < s ? a = NaN : a = Math.atan2(r, e) * 180 / Math.PI, [\n      t,\n      // OKLab L is still L\n      Math.sqrt(e ** 2 + r ** 2),\n      // Chroma\n      Ct(a)\n      // Hue, in degrees [0 to 360)\n    ];\n  },\n  // Convert from polar form\n  toBase(i) {\n    let [t, e, r] = i, a, s;\n    return isNaN(r) ? (a = 0, s = 0) : (a = e * Math.cos(r * Math.PI / 180), s = e * Math.sin(r * Math.PI / 180)), [t, a, s];\n  },\n  formats: {\n    oklch: {\n      coords: [\"<number> | <percentage>\", \"<number> | <percentage>[0,1]\", \"<number> | <angle>\"]\n    }\n  }\n});\nconst ke = 203, we = 2610 / 2 ** 14, Ur = 2 ** 14 / 2610, qr = 2523 / 2 ** 5, xe = 2 ** 5 / 2523, Se = 3424 / 2 ** 12, Ce = 2413 / 2 ** 7, Te = 2392 / 2 ** 7;\nvar Gr = new x({\n  id: \"rec2100pq\",\n  name: \"REC.2100-PQ\",\n  base: Tt,\n  toBase(i) {\n    return i.map(function(t) {\n      return (Math.max(t ** xe - Se, 0) / (Ce - Te * t ** xe)) ** Ur * 1e4 / ke;\n    });\n  },\n  fromBase(i) {\n    return i.map(function(t) {\n      let e = Math.max(t * ke / 1e4, 0), r = Se + Ce * e ** we, a = 1 + Te * e ** we;\n      return (r / a) ** qr;\n    });\n  },\n  formats: {\n    color: {\n      id: \"rec2100-pq\"\n    }\n  }\n});\nconst De = 0.17883277, Ae = 0.28466892, Le = 0.55991073, zt = 3.7743;\nvar Zr = new x({\n  id: \"rec2100hlg\",\n  cssid: \"rec2100-hlg\",\n  name: \"REC.2100-HLG\",\n  referred: \"scene\",\n  base: Tt,\n  toBase(i) {\n    return i.map(function(t) {\n      return t <= 0.5 ? t ** 2 / 3 * zt : (Math.exp((t - Le) / De) + Ae) / 12 * zt;\n    });\n  },\n  fromBase(i) {\n    return i.map(function(t) {\n      return t /= zt, t <= 1 / 12 ? Math.sqrt(3 * t) : De * Math.log(12 * t - Ae) + Le;\n    });\n  },\n  formats: {\n    color: {\n      id: \"rec2100-hlg\"\n    }\n  }\n});\nconst ai = {};\nX.add(\"chromatic-adaptation-start\", (i) => {\n  i.options.method && (i.M = si(i.W1, i.W2, i.options.method));\n});\nX.add(\"chromatic-adaptation-end\", (i) => {\n  i.M || (i.M = si(i.W1, i.W2, i.options.method));\n});\nfunction Dt({ id: i, toCone_M: t, fromCone_M: e }) {\n  ai[i] = arguments[0];\n}\nfunction si(i, t, e = \"Bradford\") {\n  let r = ai[e], [a, s, n] = v(r.toCone_M, i), [o, h, l] = v(r.toCone_M, t), u = [\n    [o / a, 0, 0],\n    [0, h / s, 0],\n    [0, 0, l / n]\n  ], c = v(u, r.toCone_M);\n  return v(r.fromCone_M, c);\n}\nDt({\n  id: \"von Kries\",\n  toCone_M: [\n    [0.40024, 0.7076, -0.08081],\n    [-0.2263, 1.16532, 0.0457],\n    [0, 0, 0.91822]\n  ],\n  fromCone_M: [\n    [1.8599364, -1.1293816, 0.2198974],\n    [0.3611914, 0.6388125, -64e-7],\n    [0, 0, 1.0890636]\n  ]\n});\nDt({\n  id: \"Bradford\",\n  // Convert an array of XYZ values in the range 0.0 - 1.0\n  // to cone fundamentals\n  toCone_M: [\n    [0.8951, 0.2664, -0.1614],\n    [-0.7502, 1.7135, 0.0367],\n    [0.0389, -0.0685, 1.0296]\n  ],\n  // and back\n  fromCone_M: [\n    [0.9869929, -0.1470543, 0.1599627],\n    [0.4323053, 0.5183603, 0.0492912],\n    [-85287e-7, 0.0400428, 0.9684867]\n  ]\n});\nDt({\n  id: \"CAT02\",\n  // with complete chromatic adaptation to W2, so D = 1.0\n  toCone_M: [\n    [0.7328, 0.4296, -0.1624],\n    [-0.7036, 1.6975, 61e-4],\n    [3e-3, 0.0136, 0.9834]\n  ],\n  fromCone_M: [\n    [1.0961238, -0.278869, 0.1827452],\n    [0.454369, 0.4735332, 0.0720978],\n    [-96276e-7, -5698e-6, 1.0153256]\n  ]\n});\nDt({\n  id: \"CAT16\",\n  toCone_M: [\n    [0.401288, 0.650173, -0.051461],\n    [-0.250268, 1.204414, 0.045854],\n    [-2079e-6, 0.048952, 0.953127]\n  ],\n  // the extra precision is needed to avoid roundtripping errors\n  fromCone_M: [\n    [1.862067855087233, -1.011254630531685, 0.1491867754444518],\n    [0.3875265432361372, 0.6214474419314753, -0.008973985167612518],\n    [-0.01584149884933386, -0.03412293802851557, 1.04996443687785]\n  ]\n});\nObject.assign(R, {\n  // whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n  // all normalized to Y (luminance) = 1.00000\n  // Illuminant A is a tungsten electric light, giving a very warm, orange light.\n  A: [1.0985, 1, 0.35585],\n  // Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n  C: [0.98074, 1, 1.18232],\n  // The daylight series of illuminants simulate natural daylight.\n  // The color temperature (in degrees Kelvin/100) ranges from\n  // cool, overcast daylight (D50) to bright, direct sunlight (D65).\n  D55: [0.95682, 1, 0.92149],\n  D75: [0.94972, 1, 1.22638],\n  // Equal-energy illuminant, used in two-stage CAT16\n  E: [1, 1, 1],\n  // The F series of illuminants represent fluorescent lights\n  F2: [0.99186, 1, 0.67393],\n  F7: [0.95041, 1, 1.08747],\n  F11: [1.00962, 1, 0.6435]\n});\nR.ACES = [0.32168 / 0.33767, 1, (1 - 0.32168 - 0.33767) / 0.33767];\nconst Vr = [\n  [0.6624541811085053, 0.13400420645643313, 0.1561876870049078],\n  [0.27222871678091454, 0.6740817658111484, 0.05368951740793705],\n  [-0.005574649490394108, 0.004060733528982826, 1.0103391003129971]\n], Hr = [\n  [1.6410233796943257, -0.32480329418479, -0.23642469523761225],\n  [-0.6636628587229829, 1.6153315916573379, 0.016756347685530137],\n  [0.011721894328375376, -0.008284441996237409, 0.9883948585390215]\n];\nvar ni = new x({\n  id: \"acescg\",\n  name: \"ACEScg\",\n  // ACEScg – A scene-referred, linear-light encoding of ACES Data\n  // https://docs.acescentral.com/specifications/acescg/\n  // uses the AP1 primaries, see section 4.3.1 Color primaries\n  coords: {\n    r: {\n      range: [0, 65504],\n      name: \"Red\"\n    },\n    g: {\n      range: [0, 65504],\n      name: \"Green\"\n    },\n    b: {\n      range: [0, 65504],\n      name: \"Blue\"\n    }\n  },\n  referred: \"scene\",\n  white: R.ACES,\n  toXYZ_M: Vr,\n  fromXYZ_M: Hr,\n  formats: {\n    color: {}\n  }\n});\nconst gt = 2 ** -16, Ft = -0.35828683, pt = (Math.log2(65504) + 9.72) / 17.52;\nvar Wr = new x({\n  id: \"acescc\",\n  name: \"ACEScc\",\n  // see S-2014-003 ACEScc – A Logarithmic Encoding of ACES Data\n  // https://docs.acescentral.com/specifications/acescc/\n  // uses the AP1 primaries, see section 4.3.1 Color primaries\n  // Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\n  // below 18% middle gray are encoded as negative ACEScc values.\n  // These values should be preserved per the encoding in Section 4.4\n  // so that all positive ACES values are maintained.\"\n  coords: {\n    r: {\n      range: [Ft, pt],\n      name: \"Red\"\n    },\n    g: {\n      range: [Ft, pt],\n      name: \"Green\"\n    },\n    b: {\n      range: [Ft, pt],\n      name: \"Blue\"\n    }\n  },\n  referred: \"scene\",\n  base: ni,\n  // from section 4.4.2 Decoding Function\n  toBase(i) {\n    const t = -0.3013698630136986;\n    return i.map(function(e) {\n      return e <= t ? (2 ** (e * 17.52 - 9.72) - gt) * 2 : e < pt ? 2 ** (e * 17.52 - 9.72) : 65504;\n    });\n  },\n  // Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\n  fromBase(i) {\n    return i.map(function(t) {\n      return t <= 0 ? (Math.log2(gt) + 9.72) / 17.52 : t < gt ? (Math.log2(gt + t * 0.5) + 9.72) / 17.52 : (Math.log2(t) + 9.72) / 17.52;\n    });\n  },\n  // encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\n  // encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\n  formats: {\n    color: {}\n  }\n}), Pe = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  A98RGB: Fr,\n  A98RGB_Linear: ii,\n  ACEScc: Wr,\n  ACEScg: ni,\n  HSL: ti,\n  HSV: ei,\n  HWB: Rr,\n  ICTCP: It,\n  JzCzHz: jt,\n  Jzazbz: He,\n  LCH: it,\n  Lab: T,\n  Lab_D65: Xt,\n  OKLCH: Ir,\n  OKLab: xt,\n  P3: Ue,\n  P3_Linear: je,\n  ProPhoto: jr,\n  ProPhoto_Linear: ri,\n  REC_2020: Xe,\n  REC_2020_Linear: Tt,\n  REC_2100_HLG: Zr,\n  REC_2100_PQ: Gr,\n  XYZ_ABS_D65: Zt,\n  XYZ_D50: Gt,\n  XYZ_D65: L,\n  sRGB: at,\n  sRGB_Linear: Ie\n});\nclass _ {\n  /**\n   * Creates an instance of Color.\n   * Signatures:\n   * - `new Color(stringToParse)`\n   * - `new Color(otherColor)`\n   * - `new Color({space, coords, alpha})`\n   * - `new Color(space, coords, alpha)`\n   * - `new Color(spaceId, coords, alpha)`\n   */\n  constructor(...t) {\n    let e;\n    t.length === 1 && (e = g(t[0]));\n    let r, a, s;\n    e ? (r = e.space || e.spaceId, a = e.coords, s = e.alpha) : [r, a, s] = t, Object.defineProperty(this, \"space\", {\n      value: f.get(r),\n      writable: !1,\n      enumerable: !0,\n      configurable: !0\n      // see note in https://262.ecma-international.org/8.0/#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\n    }), this.coords = a ? a.slice() : [0, 0, 0], this.alpha = s < 1 ? s : 1;\n    for (let n = 0; n < this.coords.length; n++)\n      this.coords[n] === \"NaN\" && (this.coords[n] = NaN);\n    for (let n in this.space.coords)\n      Object.defineProperty(this, n, {\n        get: () => this.get(n),\n        set: (o) => this.set(n, o)\n      });\n  }\n  get spaceId() {\n    return this.space.id;\n  }\n  clone() {\n    return new _(this.space, this.coords, this.alpha);\n  }\n  toJSON() {\n    return {\n      spaceId: this.spaceId,\n      coords: this.coords,\n      alpha: this.alpha\n    };\n  }\n  display(...t) {\n    let e = Bi(this, ...t);\n    return e.color = new _(e.color), e;\n  }\n  /**\n   * Get a color from the argument passed\n   * Basically gets us the same result as new Color(color) but doesn't clone an existing color object\n   */\n  static get(t, ...e) {\n    return t instanceof _ ? t : new _(t, ...e);\n  }\n  static defineFunction(t, e, r = e) {\n    let { instance: a = !0, returns: s } = r, n = function(...o) {\n      let h = e(...o);\n      if (s === \"color\")\n        h = _.get(h);\n      else if (s === \"function<color>\") {\n        let l = h;\n        h = function(...u) {\n          let c = l(...u);\n          return _.get(c);\n        }, Object.assign(h, l);\n      } else\n        s === \"array<color>\" && (h = h.map((l) => _.get(l)));\n      return h;\n    };\n    t in _ || (_[t] = n), a && (_.prototype[t] = function(...o) {\n      return n(this, ...o);\n    });\n  }\n  static defineFunctions(t) {\n    for (let e in t)\n      _.defineFunction(e, t[e], t[e]);\n  }\n  static extend(t) {\n    if (t.register)\n      t.register(_);\n    else\n      for (let e in t)\n        _.defineFunction(e, t[e]);\n  }\n}\n_.defineFunctions({\n  get: P,\n  getAll: nt,\n  set: j,\n  setAll: $e,\n  to: A,\n  equals: zi,\n  inGamut: et,\n  toGamut: I,\n  distance: qe,\n  toString: wt\n});\nObject.assign(_, {\n  util: vi,\n  hooks: X,\n  WHITES: R,\n  Space: f,\n  spaces: f.registry,\n  parse: Ye,\n  // Global defaults one may want to configure\n  defaults: F\n});\nfor (let i of Object.keys(Pe))\n  f.register(Pe[i]);\nfor (let i in f.registry)\n  Ut(i, f.registry[i]);\nX.add(\"colorspace-init-end\", (i) => {\n  var t;\n  Ut(i.id, i), (t = i.aliases) == null || t.forEach((e) => {\n    Ut(e, i);\n  });\n});\nfunction Ut(i, t) {\n  Object.keys(t.coords), Object.values(t.coords).map((r) => r.name);\n  let e = i.replace(/-/g, \"_\");\n  Object.defineProperty(_.prototype, e, {\n    // Convert coords to coords in another colorspace and return them\n    // Source colorspace: this.spaceId\n    // Target colorspace: id\n    get() {\n      let r = this.getAll(i);\n      return typeof Proxy > \"u\" ? r : new Proxy(r, {\n        has: (a, s) => {\n          try {\n            return f.resolveCoord([t, s]), !0;\n          } catch {\n          }\n          return Reflect.has(a, s);\n        },\n        get: (a, s, n) => {\n          if (s && typeof s != \"symbol\" && !(s in a)) {\n            let { index: o } = f.resolveCoord([t, s]);\n            if (o >= 0)\n              return a[o];\n          }\n          return Reflect.get(a, s, n);\n        },\n        set: (a, s, n, o) => {\n          if (s && typeof s != \"symbol\" && !(s in a) || s >= 0) {\n            let { index: h } = f.resolveCoord([t, s]);\n            if (h >= 0)\n              return a[h] = n, this.setAll(i, a), !0;\n          }\n          return Reflect.set(a, s, n, o);\n        }\n      });\n    },\n    // Convert coords in another colorspace to internal coords and set them\n    // Target colorspace: this.spaceId\n    // Source colorspace: id\n    set(r) {\n      this.setAll(i, r);\n    },\n    configurable: !0,\n    enumerable: !0\n  });\n}\n_.extend(St);\n_.extend({ deltaE: tt });\nObject.assign(_, { deltaEMethods: St });\n_.extend(Lr);\n_.extend({ contrast: er });\n_.extend(rr);\n_.extend(Oi);\n_.extend(Er);\n_.extend(yt);\nfunction oi(i) {\n  return i;\n}\nfunction Z(i) {\n  return i * i * (3 - 2 * i);\n}\nfunction hi(i, t, e, r) {\n  return i * t + e * r;\n}\nfunction Nr(i, t, e, r) {\n  let a = [\n    Math.round((i.r * t + e.r * r) * 255),\n    Math.round((i.g * t + e.g * r) * 255),\n    Math.round((i.b * t + e.b * r) * 255)\n  ];\n  return `rgb(${a[0]}, ${a[1]}, ${a[2]})`;\n}\nfunction Jr(i, t, e, r) {\n  return i.map(\n    (a, s) => hi(a, t, e[s], r)\n  );\n}\nfunction Ht(i) {\n  if (typeof i == \"number\")\n    return hi;\n  if (typeof i == \"string\") {\n    let t = {};\n    return (e, r, a, s) => r == 1 ? e : s == 1 ? a : (t[e] || (t[e] = new _(e).srgb), t[a] || (t[a] = new _(a).srgb), Nr(\n      t[e],\n      r,\n      t[a],\n      s\n    ));\n  } else if (Array.isArray(i))\n    return Jr;\n  return (t, e, r, a) => e < 1 ? t : r;\n}\nfunction W(i, t = void 0) {\n  return t === void 0 && (t = Ht(i)), {\n    finalValue: i,\n    interpolate: (e, r) => t(\n      e,\n      1 - Math.min(r, 1),\n      i,\n      Math.min(r, 1)\n    )\n  };\n}\nfunction Qr(i, t = void 0) {\n  return t === void 0 && (t = Ht(i())), {\n    interpolate: (e, r) => t(\n      e,\n      1 - Math.min(r, 1),\n      i(),\n      Math.min(r, 1)\n    )\n  };\n}\nfunction la(i, t = void 0) {\n  return t === void 0 && (t = Ht(i[0])), {\n    interpolate: (e, r) => {\n      let a = Math.min(r, 1) * (i.length - 1) - 1, s = Math.min(\n        a - Math.floor(a),\n        1\n      );\n      return a < 0 ? t(\n        e,\n        1 - s,\n        i[0],\n        s\n      ) : t(\n        i[Math.floor(a)],\n        1 - s,\n        i[Math.floor(a) + 1],\n        s\n      );\n    }\n  };\n}\nclass z {\n  constructor(t, e = 1e3, r = oi) {\n    this.duration = 0, this.finalValue = void 0, this.interpolator = null, this.duration = e, t.hasOwnProperty(\"finalValue\") ? this.finalValue = t.finalValue : this.finalValue = void 0, this.interpolator = t, this.curve = r;\n  }\n  evaluate(t, e) {\n    let r = this.curve(this.duration > 0 ? e / this.duration : 1);\n    return this.interpolator.interpolate(t, r);\n  }\n  withDelay(t) {\n    return t ? new Kr(this, t) : this;\n  }\n}\nclass Kr extends z {\n  constructor(t, e) {\n    super(t.interpolator, t.duration + e, t.curve), this.delay = e;\n  }\n  evaluate(t, e) {\n    return e <= this.delay ? t : super.evaluate(\n      t,\n      (e - this.delay) * this.duration / (this.duration - this.delay)\n    );\n  }\n}\nfunction ua(i, t = 1e3, e = oi) {\n  return new z(W(i), t, e);\n}\nvar ta = /* @__PURE__ */ ((i) => (i.Waiting = \"waiting\", i.Entering = \"entering\", i.Visible = \"visible\", i.Exiting = \"exiting\", i.Completed = \"completed\", i))(ta || {}), ea = /* @__PURE__ */ ((i) => (i.Show = \"show\", i.Hide = \"hide\", i))(ea || {});\nclass ia {\n  constructor(t = {}) {\n    this.markStates = /* @__PURE__ */ new Map(), this.marksByID = /* @__PURE__ */ new Map(), this.queuedAnimations = /* @__PURE__ */ new Map(), this._flushTimer = null, this.animatingMarks = /* @__PURE__ */ new Set(), this._updated = !1, this.defer = !1, this._showedPromiseWarning = !1, this.saveExitedMarks = !1, this._callbacks = {\n      initialize: t.initialize,\n      enter: t.enter,\n      exit: t.exit\n    };\n  }\n  /**\n   * Tells the stage manager that the given set of marks is already visible.\n   *\n   * @param marks The marks that are already visible\n   *\n   * @returns This stage manager object\n   */\n  setVisibleMarks(t) {\n    return t.forEach((e) => {\n      this.markStates.set(\n        e,\n        \"visible\"\n        /* Visible */\n      ), this.marksByID.set(e.id, e);\n    }), this;\n  }\n  /**\n   * Sets options on the stage manager.\n   *\n   * @param opts Options to configure. Currently the only option supported is\n   *  `{@link defer}`.\n   * @returns This stage manager object with the options updated\n   */\n  configure(t = {}) {\n    return this.defer = t.defer ?? this.defer, this.saveExitedMarks = t.saveExitedMarks ?? this.saveExitedMarks, this;\n  }\n  onInitialize(t) {\n    this._callbacks.initialize = t;\n  }\n  onEnter(t) {\n    this._callbacks.enter = t;\n  }\n  onExit(t) {\n    this._callbacks.exit = t;\n  }\n  advance(t) {\n    return this._updated ? (this._updated = !1, !0) : !1;\n  }\n  /**\n   * Performs the action for the mark with the given ID, and calls the\n   * appropriate callbacks.\n   */\n  _perform(t, e) {\n    if (t) {\n      if (e == \"show\") {\n        if (this.markStates.get(t) === \"visible\")\n          return;\n        this.markStates.set(\n          t,\n          \"entering\"\n          /* Entering */\n        ), this.marksByID.set(t.id, t);\n        let r = this._callbacks.enter ? this._callbacks.enter(t) : void 0;\n        r && r instanceof Promise ? (this.animatingMarks.add(t), r.then(\n          () => {\n            this.markStates.has(t) && this.markStates.get(t) == \"entering\" && (this.markStates.set(\n              t,\n              \"visible\"\n              /* Visible */\n            ), this.animatingMarks.delete(t), this._updated = !0);\n          },\n          () => {\n            this.animatingMarks.delete(t);\n          }\n        )) : (this._callbacks.enter && !this._showedPromiseWarning && (console.warn(\n          \"The enter function did not return a Promise, assuming the animation is synchronous.\"\n        ), this._showedPromiseWarning = !0), this.markStates.set(\n          t,\n          \"visible\"\n          /* Visible */\n        ));\n      } else if (e == \"hide\") {\n        let r = this.markStates.get(t) ?? null;\n        if (r === \"waiting\" || r === \"completed\")\n          return;\n        this.markStates.set(\n          t,\n          \"exiting\"\n          /* Exiting */\n        ), this.marksByID.set(t.id, t);\n        let a = this._callbacks.exit ? this._callbacks.exit(t) : void 0;\n        a && a instanceof Promise ? (this.animatingMarks.add(t), a.then(\n          () => {\n            this.markStates.has(t) && this.markStates.get(t) == \"exiting\" && (this.saveExitedMarks ? this.markStates.set(\n              t,\n              \"completed\"\n              /* Completed */\n            ) : (this.marksByID.delete(t.id), this.markStates.delete(t), this.animatingMarks.delete(t)), this._updated = !0);\n          },\n          () => {\n            this.animatingMarks.delete(t);\n          }\n        )) : (this._callbacks.exit && !this._showedPromiseWarning && (console.warn(\n          \"The exit function did not return a Promise, assuming the animation is synchronous.\"\n        ), this._showedPromiseWarning = !0), this.saveExitedMarks ? this.markStates.set(\n          t,\n          \"completed\"\n          /* Completed */\n        ) : (this.marksByID.delete(t.id), this.markStates.delete(t)));\n      }\n      this._updated = !0;\n    }\n  }\n  /**\n   * Adds the given action to the queue if `{@link defer}` is `true`, otherwise\n   * performs the action immediately.\n   *\n   * @returns `true` if the action was performed or queued successfully, or\n   *  `false` if the current state of the mark indicated that a similar action\n   *  has already been queued.\n   */\n  _enqueue(t, e) {\n    let r = this.markStates.get(t);\n    if (r === void 0)\n      return !1;\n    if (e == \"show\") {\n      if (r == \"entering\" || r == \"visible\")\n        return !1;\n      this.markStates.set(\n        t,\n        \"entering\"\n        /* Entering */\n      );\n    } else if (e == \"hide\") {\n      if (r == \"exiting\" || r == \"completed\")\n        return !1;\n      this.markStates.set(\n        t,\n        \"exiting\"\n        /* Exiting */\n      );\n    } else\n      console.error(\"Unknown action enqueued:\", e);\n    return this.defer ? (this.queuedAnimations.set(t, e), this._flushTimer || (this._flushTimer = window.setTimeout(() => this._flush(), 0))) : this._perform(t, e), !0;\n  }\n  /**\n   * Performs all actions that have been queued and clears the queue.\n   */\n  _flush() {\n    this._flushTimer = null, this.queuedAnimations.forEach((t, e) => {\n      this._perform(e, t);\n    }), this.queuedAnimations.clear();\n  }\n  /**\n   * Attempts to show a given mark.\n   *\n   * @param id The ID of the mark to show, which should contain sufficient\n   *    information to uniquely describe the mark.\n   * @returns `true` if the mark was not visible and will be made visible, or\n   *    `false` otherwise.\n   */\n  show(t) {\n    return this.markStates.has(t) || (this._callbacks.initialize && this._callbacks.initialize(t), this.markStates.set(\n      t,\n      \"waiting\"\n      /* Waiting */\n    ), this.marksByID.set(t.id, t)), this._enqueue(\n      t,\n      \"show\"\n      /* Show */\n    );\n  }\n  /**\n   * Attempts to hide a mark with the given ID.\n   *\n   * @param id The ID of the mark to hide.\n   * @returns `true` if the mark was visible and will be made invisible and\n   *    subsequently destroyed, or `false` otherwise.\n   */\n  hide(t) {\n    return this.markStates.has(t) ? this._enqueue(\n      t,\n      \"hide\"\n      /* Hide */\n    ) : !1;\n  }\n  /**\n   * Returns the Mark with the given ID if it exists (in any state, including\n   * exiting), or undefined if none exists.\n   *\n   * @param id The ID to lookup\n   * @param visibleOnly If true, only return marks that are visible or scheduled\n   *  to be visible. Otherwise, return any mark in the pool (including exiting).\n   * @returns the mark with the given ID or undefined\n   */\n  get(t, e = !1) {\n    let r = this.marksByID.get(t);\n    if (r && e) {\n      let a = this.markStates.get(r);\n      if (a === \"exiting\" || a === \"completed\")\n        return;\n    }\n    return r;\n  }\n  forEach(t) {\n    let e = 0;\n    this.markStates.forEach((r, a) => {\n      (r === \"entering\" || r === \"visible\" || r === \"exiting\") && (t(a, e), e++);\n    });\n  }\n  /**\n   * Returns all marks that this stage manager knows about.\n   */\n  getMarks() {\n    return Array.from(this.markStates.keys());\n  }\n  /**\n   * Returns the number of marks that are entering, visible, or exiting.\n   */\n  count() {\n    return Array.from(this.markStates.keys()).filter(\n      (t) => [\n        \"entering\",\n        \"visible\",\n        \"exiting\"\n        /* Exiting */\n      ].includes(this.markStates.get(t))\n    ).length;\n  }\n  /**\n   * Returns all marks that are either entering, visible, or exiting.\n   */\n  getVisibleMarks() {\n    return Array.from(this.markStates.keys()).filter(\n      (t) => [\n        \"entering\",\n        \"visible\",\n        \"exiting\"\n        /* Exiting */\n      ].includes(this.markStates.get(t))\n    );\n  }\n}\nfunction Ee(i, t, e) {\n  return Object.fromEntries(\n    Object.entries(i).map(([r, a]) => [\n      r,\n      typeof a == \"function\" ? a(t, e) : a\n    ])\n  );\n}\nclass ra {\n  /**\n   * @param marks The set of marks that this group should manage, all including\n   *  the same set of attributes.\n   * @param opts Options for the mark group (see {@link configure})\n   */\n  constructor(t = [], e = {\n    animationDuration: 1e3,\n    animationCurve: Z\n  }) {\n    this.timeProvider = null, this.marks = [], this.factory = null, this.lazyUpdates = !0, this.useStaging = !0, this.stage = null, this.markArrayDirty = !1, this.animatingMarks = /* @__PURE__ */ new Set(), this.updatedMarks = /* @__PURE__ */ new Set(), this.preloadableProperties = /* @__PURE__ */ new Set(), this._forceUpdate = !1, this._markListChanged = !1, this._changedLastTick = !1, this._updateListeners = {}, this._eventListeners = {}, this.timeProvider = Re(), this.lazyUpdates = !0, this._defaultDuration = 1e3, this._defaultCurve = Z, this.configure(e), typeof t == \"function\" ? this.factory = t : this.marks = t, this.marksByID = /* @__PURE__ */ new Map(), this.markSet = /* @__PURE__ */ new Set(), this.marks.forEach((r, a) => {\n      if (this.marksByID.has(r.id)) {\n        console.warn(`ID '${r.id}' is duplicated in mark render group`);\n        return;\n      }\n      this.marksByID.set(r.id, r), this.markSet.add(r), this._setupMark(r);\n    }), this._setupStage();\n  }\n  /**\n   * Applies configuration options to the render group.\n   *\n   * @param opts Options for the mark group, including:\n   *  - `timeProvider`: a shared `TimeProvider` object to be used among all\n   *    marks. By default a new time provider is created.\n   *  - `lazyUpdates`: whether to iterate over only the updated marks in each\n   *    iteration, or every mark. The default is `false`, meaning every mark\n   *    is updated every iteration.\n   *  - `animationDuration`: the default animation duration in milliseconds\n   *    (default 1000)\n   *  - `animationCurve`: the default animation curve to use (default ease-in-out)\n   *  - `hitTest`: a function to run when the Mark's hitTest method is called,\n   *    that takes the Mark and a coordinate array and returns true if the\n   *    coordinates intersect with the mark.\n   * @returns this render group\n   */\n  configure(t) {\n    return t.timeProvider !== void 0 && (this.timeProvider = t.timeProvider), t.lazyUpdates !== void 0 && (this.lazyUpdates = t.lazyUpdates), t.animationDuration !== void 0 && (this._defaultDuration = t.animationDuration), t.animationCurve !== void 0 && (this._defaultCurve = t.animationCurve), t.hitTest !== void 0 && (this._hitTest = t.hitTest), this.marks && this.getMarks().forEach((e) => this._configureMark(e)), this.useStaging = t.useStaging ?? this.useStaging, this._setupStage(), this;\n  }\n  configureStaging(t, e = void 0) {\n    return this.useStaging || console.error(\n      \"Can't configure staging without setting useStaging to true\"\n    ), this.stage.onInitialize(t.initialize), this.stage.onEnter(t.enter), this.stage.onExit(t.exit), e && this.stage.configure(e), this;\n  }\n  /**\n   * Sets up the stage manager if it has not already been set up.\n   */\n  _setupStage() {\n    this.useStaging ? (this.stage || (this.stage = new ia()), this.marks && this.stage.setVisibleMarks(this.getMarks())) : this.stage = null;\n  }\n  /**\n   * Sets up a mark for the first time.\n   */\n  _setupMark(t) {\n    this._configureMark(t), t.addListener((e, r, a) => {\n      this.updatedMarks.add(e), !this.preloadableProperties.has(r) && a && this.animatingMarks.add(e), this._changedLastTick = !0;\n    }), t.addGraphListener((e, r, a, s) => {\n      a.forEach((n) => {\n        !s.includes(n) && n.sourceMarks().length == 1 && this.deleteMark(n);\n      }), s.forEach((n) => {\n        a.includes(n) || this.addMark(n);\n      });\n    });\n  }\n  /**\n   * Configures a mark's default properties.\n   * @param m the mark to configure\n   */\n  _configureMark(t) {\n    t.setTimeProvider(this.timeProvider), t.configure({\n      animationDuration: this._defaultDuration,\n      animationCurve: this._defaultCurve,\n      ...this._hitTest !== void 0 ? { hitTest: this._hitTest } : {}\n    }), Object.entries(this._updateListeners).forEach(\n      ([e, r]) => t.onUpdate(e, r)\n    ), Object.entries(this._eventListeners).forEach(\n      ([e, r]) => t.onEvent(e, r)\n    ), this.preloadableProperties.forEach(\n      (e) => t.attributes[e].registerPreloadable()\n    );\n  }\n  onUpdate(t, e) {\n    return this._updateListeners[t] = e, this.getMarks().forEach((r) => r.onUpdate(t, e)), this;\n  }\n  onEvent(t, e) {\n    return this._eventListeners[t] = e, this.getMarks().forEach((r) => r.onEvent(t, e)), this;\n  }\n  /**\n   * Sends an event to the mark and runs its event listener if it has one.\n   *\n   * @param eventName The name of the event\n   * @param details A details object to pass to the event listener\n   * @returns a Promise if the event listener for this event name returns a Promise,\n   *  otherwise nothing\n   */\n  dispatch(t, e = void 0) {\n    let r = this.getMarks().map((a) => a.dispatch(t, e)).filter((a) => a instanceof Promise);\n    if (r.length > 0)\n      return new Promise((a, s) => {\n        Promise.all(r).then(() => a()).catch(s);\n      });\n  }\n  /**\n   * Triggers the mark group to run an update even when no marks have been\n   * explicitly updated. This only changes behavior when `lazyUpdates` is\n   * set to `true`.\n   *\n   * @returns this render group\n   *\n   * @see lazyUpdates\n   */\n  forceUpdate() {\n    return this._forceUpdate = !0, this;\n  }\n  /**\n   * @returns The current time that all contained marks have\n   */\n  currentTime() {\n    return this.timeProvider();\n  }\n  /**\n   * @returns The set of marks that this render group knows about\n   */\n  getMarks() {\n    return this.markArrayDirty && (this.marks = Array.from(this.markSet)), this.markArrayDirty = !1, this.marks;\n  }\n  /**\n   * Declares that the given attribute will only ever use preloadable animations.\n   * Preloadable attributes will not be counted in calls to {@link marksAnimating}, and\n   * only initial changes will be reflected in {@link marksChanged}. This permits\n   * faster rendering by computing animations in shaders, and only computing\n   * them on the CPU when explicitly requested through a call to {@link Attribute.get()}.\n   *\n   * @param attrName the attribute to register\n   * @returns this render group\n   */\n  registerPreloadableProperty(t) {\n    return this.preloadableProperties.add(t), this.getMarks().forEach(\n      (e) => e.attributes[t].registerPreloadable()\n    ), this;\n  }\n  /**\n   * Advances all of the marks (or the updated marks, if `lazyUpdates` is set\n   * to `true`) and returns whether a redraw is needed.\n   *\n   * @param dt The time elapsed since the last call to `advance`.\n   *\n   * @returns `true` if marks have changed and a redraw is needed, or `false`\n   *  otherwise.\n   */\n  advance(t) {\n    var a;\n    this.timeProvider.advance(t);\n    let e = this.lazyUpdates ? [...this.animatingMarks, ...this.updatedMarks] : this.stage ? this.stage.getMarks() : this.getMarks();\n    if (this.updatedMarks = /* @__PURE__ */ new Set(), !(((a = this.stage) == null ? void 0 : a.advance(t)) ?? !1) && e.length == 0 && !this._forceUpdate && !this._markListChanged)\n      return this._changedLastTick = !1, !1;\n    let r = /* @__PURE__ */ new Set();\n    for (let s of e)\n      r.has(s) || (s.advance() || this.animatingMarks.delete(s), r.add(s));\n    return this._forceUpdate = !1, this._markListChanged = !1, this._changedLastTick = !0, !0;\n  }\n  /**\n   * @returns whether any marks are currently animating, excluding any marks that\n   *  have a preloadable animation (since these are not regularly updated)\n   */\n  marksAnimating() {\n    return this.animatingMarks.size > 0;\n  }\n  /**\n   * Animates all marks to the value defined by the given function.\n   *\n   * @param attrName the attribute name to update\n   * @param finalValueFn a function that takes a mark and its index, and returns\n   *  a value or value function for that mark\n   * @param options options for the animation, including the duration and curve\n   *  to use\n   * @returns this render group\n   */\n  animateTo(t, e, r = {}) {\n    return this.forEach((a, s) => {\n      a.animateTo(\n        t,\n        typeof e == \"function\" ? e(a, s) : e,\n        Ee(r, a, s)\n      );\n    }), this;\n  }\n  /**\n   * Animates all marks to their new computed value, or uses a custom\n   * interpolator.\n   *\n   * @param attrName the attribute name to update\n   * @param options options for the animation, including the duration and curve\n   *  to use. The `interpolator` option takes a function that allows you to\n   *  specify a custom interpolator for each mark.\n   * @returns this render group\n   */\n  animate(t, e = {}) {\n    return this.preloadableProperties.has(t) && e.interpolator ? (console.error(\n      \"Cannot apply custom interpolator function on preloadable property.\"\n    ), this) : (this.forEach((a, s) => {\n      let n = Ee(e, a, s);\n      a.animate(t, n);\n    }), this);\n  }\n  /**\n   * Updates the value of the given attribute in every mark.\n   *\n   * @param attrName the attribute name to update\n   * @param newValueFn an optional function that takes a mark and its index, and\n   *  returns the new value or value function for that mark. If not provided,\n   *  the attribute values will be recomputed using the existing value or value\n   *  function.\n   * @returns this render group\n   */\n  update(t, e = void 0) {\n    return this.forEach((r, a) => {\n      r.setAttr(\n        t,\n        e === void 0 ? void 0 : typeof e == \"function\" ? e(r, a) : e\n      );\n    }), this;\n  }\n  /**\n   * Waits for the animations on the specified attribute name(s) to complete.\n   *\n   * @param attrNames An attribute name or array of attribute names to wait for.\n   * @param rejectOnCancel If true (default), reject the promise if any animation is\n   *  canceled or superseded. If false, resolve the promise in this case.\n   * @returns a `Promise` that resolves when all the animations for the given\n   *  attributes have completed, and rejects if any of their animations are\n   *  canceled or superseded by another animation (unless `rejectOnCancel` is set\n   *  to `false`). If none of the listed attributes have an active animation,\n   *  the promise resolves immediately.\n   */\n  wait(t, e = !0) {\n    return Promise.all(\n      this.map((r) => r.wait(t, e))\n    );\n  }\n  /**\n   * Retrieves the mark with the given ID, or undefined if it does not exist.\n   * NOTE: Use of this method assumes there is only one mark ever added with the\n   * given ID.\n   *\n   * @param id the ID of the mark to search for\n   * @returns the `Mark` instance with the given ID or undefined\n   */\n  get(t) {\n    return this.marksByID.get(t);\n  }\n  forEach(t) {\n    this.getMarks().forEach(t);\n  }\n  map(t) {\n    return this.getMarks().map(t);\n  }\n  /**\n   * Filters the marks so that a subsequent action can be performed.\n   *\n   * @example ```markSet.filter([...]).animateTo(\"alpha\", 0.0)\n   * @param filterer Predicate function\n   * @returns a view of the render group with only a subset of the marks\n   */\n  filter(t) {\n    let e = Object.assign({}, this), r = this.getMarks().filter(t);\n    return Object.keys(this).forEach((a) => {\n      e[a] = this[a];\n    }), e.marks = r, e.marksByID = /* @__PURE__ */ new Map(), e.markSet = /* @__PURE__ */ new Set(), r.forEach((a) => {\n      e.marksByID.set(a.id, a), e.markSet.add(a);\n    }), _i(this).forEach((a) => {\n      a == \"getMarks\" ? e[a] = () => r : e[a] = (...s) => {\n        let n = this.getMarks(), o = this.marksByID, h = this.markSet;\n        this.marks = r, this.marksByID = e.marksByID, this.markSet = e.markSet;\n        let l = this[a](...s);\n        return this.marks = n, this.marksByID = o, this.markSet = h, l === this ? e : l;\n      };\n    }), e;\n  }\n  /**\n   * Notifies every mark that the transform for the given attribute has changed.\n   *\n   * @param attrName the attribute whose transform has changed\n   * @returns this render group\n   *\n   * @see Attribute.updateTransform\n   */\n  updateTransform(t) {\n    return this.getMarks().forEach((e) => e.updateTransform(t)), this;\n  }\n  /**\n   * Adds a mark to the render group.\n   *\n   * @param mark the mark to add\n   * @returns this render group\n   */\n  addMark(t) {\n    return this.markSet.has(t) ? this : (this.marks.push(t), this.marksByID.set(t.id, t), this.markSet.add(t), this._setupMark(t), this._markListChanged = !0, this.stage && this.stage.show(t), this);\n  }\n  /**\n   * Removes a mark from the render group.\n   *\n   * @param mark the mark to remove\n   * @returns this render group\n   */\n  deleteMark(t) {\n    return this.markSet.has(t) ? (this.marksByID.delete(t.id), this.markSet.delete(t), this.markArrayDirty = !0, this._markListChanged = !0, this.stage && this.stage.hide(t), this) : this;\n  }\n  /**\n   * Adds a mark to the render group with the given ID. Use of this method\n   * requires that the render group was instantiated with a factory function\n   * instead of a static list.\n   *\n   * If the mark already exists, this method does nothing. If an existing mark\n   * with the same ID is currently exiting the stage, that mark is reused.\n   *\n   * @param id the ID of the mark to create\n   * @returns this render group\n   */\n  add(t) {\n    if (!this.factory)\n      return console.error(\n        \"Cannot use the add method of MarkRenderGroup without defining a factory function at initialization\"\n      ), this;\n    if (this.has(t))\n      return this;\n    let e;\n    return this.useStaging && (e = this.stage.get(t)), e || (e = this.factory(t)), this.addMark(e);\n  }\n  /**\n   * Removes a mark with the given ID from the render group, or does nothing if\n   * it does not exist.\n   *\n   * @param mark the mark to remove\n   * @returns this render group\n   */\n  delete(t) {\n    return this.has(t) ? this.deleteMark(this.get(t)) : this;\n  }\n  /**\n   * Returns true if the render group has the given mark (and it is visible if\n   * using staging) or false otherwise.\n   *\n   * @param markID the mark ID to search for\n   */\n  has(t) {\n    return this.marksByID.has(t);\n  }\n  /**\n   * @returns the number of marks in the render group\n   */\n  count() {\n    return this.markSet.size;\n  }\n  /**\n   * Sets transform of an attribute to a new function, can be applied to an Attribute,\n   * a Mark, or a MarkRenderGroup\n   * @param attrToModify attribute to modify\n   * @param newFunc new function to set transform to\n   */\n  setTransform(t, e) {\n    this.forEach((r) => r.setTransform(t, e));\n  }\n  /**\n   * @param attrNames the attributes to check for changes in (if none provided,\n   *  checks all attributes)\n   *\n   * @returns whether or not any mark in the render group changed value (due to\n   *  animation or other updates) on the last call to `advance`\n   */\n  changed(t = void 0) {\n    return t === void 0 ? this._changedLastTick : this._changedLastTick && this.getMarks().some((e) => e.changed(t));\n  }\n}\nconst aa = 5e3;\nclass G {\n  constructor(t, e) {\n    this._timeProvider = null, this._attrNames = [], this._listeners = [], this._graphListeners = [], this._defaultDuration = 1e3, this._defaultCurve = Z, this._changedLastTick = !1, this._changedAttributes = {}, this._hitTest = null, this._adjacency = {}, this._reverseAdjacency = /* @__PURE__ */ new Set(), this.represented = void 0, this._updateListeners = {}, this._eventListeners = {}, this.framesWithUpdate = 0, this.id = t, e === void 0 && console.error(\n      \"Mark constructor requires an ID and an object defining attributes\"\n    );\n    let r = {};\n    Object.keys(e).forEach(\n      (a) => {\n        let s = new M(\n          Object.assign(\n            Object.assign(\n              {},\n              e[a] instanceof M ? e[a] : new M(e[a])\n            ),\n            {\n              computeArg: this\n            }\n          )\n        );\n        s.addListener(\n          (n, o) => this._attributesChanged(a, o)\n        ), r[a] = s;\n      }\n    ), this.attributes = r, this._attrNames = Object.keys(r), this._changedAttributes = Object.fromEntries(\n      this._attrNames.map((a) => [a, !0])\n    );\n  }\n  /**\n   * Applies configuration options to the mark.\n   *\n   * @param opts Options for the mark group, including:\n   *  - `animationDuration`: the default animation duration in milliseconds\n   *    (default 1000)\n   *  - `animationCurve`: the default animation curve to use (default ease-in-out)\n   *  - `hitTest`: a function to run when the Mark's hitTest method is called,\n   *    that takes the Mark and a coordinate array and returns true if the\n   *    coordinates intersect with the mark.\n   * @returns this Mark\n   */\n  configure(t) {\n    return t.animationDuration !== void 0 && (this._defaultDuration = t.animationDuration), t.animationCurve !== void 0 && (this._defaultCurve = t.animationCurve), t.hitTest !== void 0 && (this._hitTest = t.hitTest), this;\n  }\n  onUpdate(t, e) {\n    return this._updateListeners[t] = e, this;\n  }\n  onEvent(t, e) {\n    return this._eventListeners[t] = e, this;\n  }\n  /**\n   * Sends an event to the mark and runs its event listener if it has one.\n   *\n   * @param eventName The name of the event\n   * @param details A details object to pass to the event listener\n   * @returns a Promise if the event listener for this event name returns a Promise,\n   *  otherwise nothing\n   */\n  dispatch(t, e = void 0) {\n    if (this._eventListeners[t])\n      return this._eventListeners[t](this, e, t);\n  }\n  addListener(t) {\n    return this._listeners.push(t), this;\n  }\n  removeListener(t) {\n    let e = this._listeners.indexOf(t);\n    return e >= 0 && (this._listeners = this._listeners.splice(e, 1)), this;\n  }\n  addGraphListener(t) {\n    return this._graphListeners.push(t), this;\n  }\n  removeGraphListener(t) {\n    let e = this._graphListeners.indexOf(t);\n    return e >= 0 && (this._graphListeners = this._graphListeners.splice(e, 1)), this;\n  }\n  _attributesChanged(t, e) {\n    this._changedLastTick = !0, this._changedAttributes[t] = !0, this._listeners.forEach((r) => r(this, t, e)), this._updateListeners[t] && this._updateListeners[t](this, this.attributes[t].future());\n  }\n  /**\n   * Tests whether a given coordinate array intersects with the Mark. If no\n   * hit test function has been configured for the Mark through the `configure`\n   * method, this method returns true for any location.\n   *\n   * @param location an array of numerical coordinates to test\n   * @returns true if the coordinates intersect with the mark, otherwise false\n   */\n  hitTest(t) {\n    return this._hitTest ? this._hitTest(this, t) : !0;\n  }\n  setTimeProvider(t) {\n    return this._timeProvider = t, Object.values(this.attributes).forEach(\n      (e) => e.setTimeProvider(this._timeProvider)\n    ), this;\n  }\n  /**\n   * Modifies the mark to indicate that it represents the given object. The value\n   * will be stored in the `represented` property.\n   *\n   * @param rep The object that this mark represents\n   * @return this Mark\n   */\n  representing(t) {\n    return this.represented = t, this;\n  }\n  /**\n   * Advances the time of the animations by the given number of msec, and\n   * returns whether or not a redraw is needed.\n   *\n   * @param dt the number of milliseconds between this call and the previous\n   *    call to advance(). If not passed, the mark's time provider will be used\n   *    to compute the current time.\n   * @returns True if any mark attribute has been updated, or false otherwise.\n   */\n  advance(t = void 0) {\n    let e = !1;\n    for (let r of this._attrNames) {\n      if (!this._changedAttributes[r])\n        continue;\n      this.attributes[r].advance(t) ? e = !0 : this._changedAttributes[r] = !1;\n    }\n    return e ? (this.framesWithUpdate += 1, this.framesWithUpdate > aa && console.warn(\"Marks are being updated excessively!\"), this._changedLastTick = !0, !0) : (this.framesWithUpdate = 0, this._changedLastTick = !1, !1);\n  }\n  /**\n   * Instantaneously sets the value of an attribute, either taking the new\n   * provided value or re-computing the value.\n   *\n   * @param attrName Attribute name to update.\n   * @param newValue The new value of the attribute, or undefined if the\n   *  attribute should recompute its value using its value function.\n   */\n  setAttr(t, e = void 0) {\n    let r = this.attributes[t];\n    r === void 0 && console.error(`No attribute named '${String(t)}'`);\n    let a = r.last();\n    return e === void 0 ? r.compute() : r.set(e), K(a, r.data()) || this._listeners.forEach((s) => s(this, t, !1)), this;\n  }\n  /**\n   * Gets the (potentially transformed) value of an attribute.\n   *\n   * @param attrName Name of the attribute to retrieve.\n   * @returns The value of the attribute\n   *\n   * * @see Attribute.get\n   */\n  attr(t, e = !0) {\n    return this.attributes[t] || console.error(`No attribute named '${String(t)}'`), e ? this.attributes[t].get() : this.attributes[t].getUntransformed();\n  }\n  /**\n   * Returns a plain JS object containing all attribute values at the given\n   * instance. Useful for destructuring object attributes, for instance:\n   *\n   * let { x, y, alpha } = mark.get();\n   *\n   * **NOTE:** This method may return incorrect values for preloadable attributes\n   * since these are not updated at every frame.\n   *\n   * @param transformed whether or not to apply transforms to the attributes. Can\n   *  be a boolean value or an object keyed by attribute names where the values\n   *  are booleans. The default is true for all attributes.\n   */\n  get(t = !0) {\n    let e = Object.entries(t).length > 0;\n    return Object.fromEntries(\n      this._attrNames.map((r) => {\n        let a = e ? t[r] ?? !0 : t;\n        return [\n          r,\n          a ? this.attributes[r].get() : this.attributes[r].getUntransformed()\n        ];\n      })\n    );\n  }\n  /**\n   * Gets the true data value (non-animated) for an attribute.\n   *\n   * @param attrName Name of the attribute to retrieve.\n   * @returns The non-animated value of the attribute\n   *\n   * @see Attribute.data\n   */\n  data(t) {\n    return this.attributes[t] === void 0 && console.error(`No attribute named '${String(t)}'`), this.attributes[t].data();\n  }\n  /**\n   * Marks that the transform has changed for the given attribute.\n   *\n   * @param attrName Name of the attribute for which to update the transform.\n   * @returns this mark\n   *\n   * @see Attribute.updateTransform\n   */\n  updateTransform(t) {\n    return this.attributes[t] === void 0 && console.error(`No attribute named '${String(t)}'`), this.attributes[t].updateTransform(), this;\n  }\n  animateTo(t, e, r = {}) {\n    if (!this.attributes.hasOwnProperty(t))\n      return console.error(`No attribute named '${String(t)}'`), this;\n    if (typeof e == \"function\")\n      return this.attributes[t].set(e), this.animate(t, {\n        duration: r.duration,\n        curve: r.curve\n      }), this;\n    if (this.attributes[t].valueFn && this.attributes[t].set(\n      this.attributes[t].last()\n    ), (r.overrideIfIdentical ?? !0) || !K(e, this.attributes[t].data())) {\n      let a = r.duration === void 0 ? this._defaultDuration : r.duration, s = r.curve === void 0 ? this._defaultCurve : r.curve, n = new z(\n        W(e),\n        a,\n        s\n      ).withDelay(r.delay || 0);\n      this.attributes[t].animate(n);\n    }\n    return this;\n  }\n  animate(t, e = {}) {\n    if (!this.attributes.hasOwnProperty(t))\n      return console.error(\n        `Attempting to animate undefined property ${String(t)}`\n      ), this;\n    let r;\n    if (e instanceof z)\n      r = e;\n    else if (e.interpolator !== void 0) {\n      let a = e.interpolator;\n      r = new z(\n        a,\n        e.duration !== void 0 ? e.duration : this._defaultDuration,\n        e.curve !== void 0 ? e.curve : this._defaultCurve\n      ).withDelay(e.delay || 0);\n    } else {\n      let a = this.data(t);\n      if (!K(a, this.attributes[t].last()) || !K(a, this.attributes[t].future())) {\n        let s = e.duration !== void 0 ? e.duration : this._defaultDuration, n = e.curve !== void 0 ? e.curve : this._defaultCurve;\n        r = new z(\n          W(a),\n          s,\n          n\n        ).withDelay(e.delay || 0);\n      } else\n        return this;\n    }\n    return this.attributes[t].animate(r), this;\n  }\n  /**\n   * Waits for the animations on the specified attribute name(s) to complete.\n   *\n   * @param attrNames An attribute name or array of attribute names to wait for.\n   * @param rejectOnCancel If true (default), reject the promise if any animation is\n   *  canceled or superseded. If false, resolve the promise in this case.\n   * @returns a `Promise` that resolves when all the animations for the given\n   *  attributes have completed, and rejects if any of their animations are\n   *  canceled or superseded by another animation (unless `rejectOnCancel` is set\n   *  to `false`). If none of the listed attributes have an active animation,\n   *  the promise resolves immediately.\n   */\n  wait(t, e = !0) {\n    let r = Array.isArray(t) ? t : [t];\n    return Promise.all(\n      r.map((a) => this.attributes[a].wait(e))\n    );\n  }\n  /**\n   * \"Freezes\" the given attributes by setting them to their last values. This\n   * removes any reactive value functions and replaces them with static values.\n   * The value functions will not be re-run.\n   *\n   * @param attrNames An attribute name or array of names to freeze\n   * @returns this mark\n   */\n  freeze(t) {\n    return (Array.isArray(t) ? t : [t]).forEach((r) => this.attributes[r].freeze()), this;\n  }\n  /**\n   * @param attrNames the attributes to check for changes in (if none provided,\n   *  checks all attributes)\n   *\n   * @returns whether or not this mark changed value (due to animation or\n   * other updates) on the last call to `advance`\n   */\n  changed(t = void 0) {\n    return t === void 0 ? this._changedLastTick : Array.isArray(t) ? this._changedLastTick && t.some((e) => this.attributes[e].changed()) : this._changedLastTick && this.attributes[t].changed();\n  }\n  /**\n   * Returns a copy of the mark with the given ID and new attribute values. The\n   * Mark's adjacency data is not copied.\n   *\n   * @param id the ID for the new mark\n   * @param newValues new values for the mark's attributes. Each entry in the\n   *  given object should be keyed by an attribute name, and its value should be\n   *  either a value of the same type as the attribute's value, a new value\n   *  function, or a new attribute of the same type.\n   * @returns a new `Mark` instance\n   */\n  copy(t, e = {}) {\n    return new G(t, {\n      ...this.attributes,\n      ...Object.fromEntries(\n        Object.entries(e).map(([r, a]) => a instanceof M ? [r, a] : typeof a == \"function\" ? [\n          r,\n          this.attributes[r].copy({ valueFn: a })\n        ] : a.value !== void 0 || a.valueFn !== void 0 ? [r, new M(a)] : [r, this.attributes[r].copy({ value: a })])\n      )\n    });\n  }\n  adj(t, e = void 0) {\n    if (e !== void 0) {\n      let r = Array.isArray(e) ? e : [e], a = this._adjacency[t] ?? /* @__PURE__ */ new Set();\n      this._graphListeners.forEach(\n        (s) => s(this, t, Array.from(a), r)\n      ), a.forEach((s) => s._removeEdgeFrom(this)), this._adjacency[t] = new Set(r), r.forEach((s) => s._addEdgeFrom(this));\n      return;\n    }\n    return Array.from(this._adjacency[t] ?? /* @__PURE__ */ new Set());\n  }\n  /**\n   * Returns the marks that have an edge to this mark.\n   */\n  sourceMarks() {\n    return Array.from(this._reverseAdjacency);\n  }\n  /**\n   * TODO make sure if you remove a source edge but another named edge to the\n   * same mark exists, it's not removed from _reverseAdjacency!!\n   *\n   * Tells the mark that it has an edge from the given mark.\n   * @param sourceMark the mark that has an edge to this mark\n   */\n  _addEdgeFrom(t) {\n    return this._reverseAdjacency.add(t), this;\n  }\n  /**\n   * Tells the mark that it no longer has an edge from the given mark.\n   * @param sourceMark the mark that has no longer has an edge to this mark\n   */\n  _removeEdgeFrom(t) {\n    return this._reverseAdjacency.delete(t), this;\n  }\n  /**\n   * Sets transform of an attribute to a new function, can be applied to an Attribute,\n   * a Mark, or a MarkRenderGroup\n   * @param attrToModify attribute to modify\n   * @param newFunc new function to set transform to\n   */\n  setTransform(t, e) {\n    this.attributes[t].setTransform(e);\n  }\n}\nfunction ca(i) {\n  let t;\n  if (typeof t == \"function\")\n    t = i;\n  else {\n    let e = i;\n    t = (r, a) => new G(\n      r,\n      Object.fromEntries(\n        Object.entries(e).map(([s, n]) => typeof n == \"function\" ? [s, n(a[s])] : a[s] ? a[s] instanceof M ? [s, a[s]] : [s, new M(a[s])] : [s, n.copy()])\n      )\n    );\n  }\n  return {\n    create: (e, r) => {\n      let a = t(e, r);\n      return a instanceof G ? a : new G(e, a);\n    }\n  };\n}\nclass da {\n  constructor(t) {\n    this._callbacks = [], this._lastTick = void 0, this.stopped = !0, typeof t.advance == \"function\" ? this.toAdvance = [t] : this.toAdvance = t, this.start();\n  }\n  onChange(t) {\n    return this._callbacks.push(t), this;\n  }\n  start() {\n    return this._lastTick = window.performance.now(), this.stopped = !1, this._callbacks.forEach((t) => t()), requestAnimationFrame((t) => this.tick(t)), this;\n  }\n  stop() {\n    return this._lastTick = void 0, this.stopped = !0, this;\n  }\n  tick(t) {\n    this._lastTick === void 0 && (this._lastTick = window.performance.now()), this.toAdvance.map((e) => e.advance(t - this._lastTick)).some((e) => e) && this._callbacks.forEach((e) => e()), this.stopped || requestAnimationFrame((e) => this.tick(e)), this._lastTick = t;\n  }\n}\nclass fa {\n  constructor(t) {\n    this._callbacks = [], this._lastTick = void 0, this.stopped = !0, typeof t.advance == \"function\" ? this.toAdvance = [t] : this.toAdvance = t, this.start();\n  }\n  onChange(t) {\n    return this._callbacks.push(t), this;\n  }\n  start() {\n    if (this.stopped)\n      return this._lastTick = window.performance.now(), this.stopped = !1, this._callbacks.forEach((t) => t()), requestAnimationFrame((t) => this.tick(t)), this;\n  }\n  stop() {\n    return this._lastTick = void 0, this.stopped = !0, this;\n  }\n  tick(t) {\n    this._lastTick === void 0 && (this._lastTick = window.performance.now()), this.toAdvance.map((e) => e.advance(t - this._lastTick)).some((e) => e) ? (this._callbacks.forEach((e) => e()), this.stopped || requestAnimationFrame((e) => this.tick(e)), this._lastTick = t) : this.stop();\n  }\n}\nfunction _t(i, t, e) {\n  e > 0 ? (i[0].animate(\n    new z(W(t[0]), e, Z)\n  ), i[1].animate(\n    new z(W(t[1]), e, Z)\n  )) : (i[0].set(t[0]), i[1].set(t[1]));\n}\nclass ma {\n  constructor(t = {}) {\n    this.animationDuration = 1e3, this.squareAspect = !0, this._xDomain = [\n      new M(0),\n      new M(1)\n    ], this._yDomain = [\n      new M(0),\n      new M(1)\n    ], this._xRange = [\n      new M(0),\n      new M(1)\n    ], this._yRange = [\n      new M(0),\n      new M(1)\n    ], this._xScaleFactor = new M(1), this._yScaleFactor = new M(1), this._translateX = new M(0), this._translateY = new M(0), this._calculatingTransform = !1, this.timeProvider = Re(), this.controller = null, this._updatedNoAdvance = !1, this.listeners = [], this.xScale = Object.assign(\n      (e) => ((e - this.xDomain()[0]) * this.xRSpan() / this.xDSpan() + this.xRange()[0]) * this._xScaleFactor.get() + this._translateX.get(),\n      {\n        domain: () => {\n          let e = this.xRange();\n          return [this.xScale.invert(e[0]), this.xScale.invert(e[1])];\n        },\n        range: () => [this._xRange[0].get(), this._xRange[1].get()],\n        invert: (e) => ((e - this._translateX.get()) / this._xScaleFactor.get() - this.xRange()[0]) * this.xDSpan() / this.xRSpan() + this.xDomain()[0]\n      }\n    ), this.yScale = Object.assign(\n      (e) => ((e - this.yDomain()[0]) * this.yRSpan() / this.yDSpan() + this.yRange()[0]) * this._yScaleFactor.get() + this._translateY.get(),\n      {\n        domain: () => {\n          let e = this.yRange();\n          return [this.yScale.invert(e[0]), this.yScale.invert(e[1])];\n        },\n        range: () => [this._yRange[0].get(), this._yRange[1].get()],\n        invert: (e) => ((e - this._translateY.get()) / this._yScaleFactor.get() - this.yRange()[0]) * this.yDSpan() / this.yRSpan() + this.yDomain()[0]\n      }\n    ), this.xDomain([0, 1]), this.yDomain([0, 1]), this.xRange([0, 1]), this.yRange([0, 1]), this.configure(t), this._xScaleFactor.setTimeProvider(this.timeProvider), this._yScaleFactor.setTimeProvider(this.timeProvider), this._translateX.setTimeProvider(this.timeProvider), this._translateY.setTimeProvider(this.timeProvider);\n  }\n  configure(t = {}) {\n    return this.animationDuration = t.animationDuration !== void 0 ? t.animationDuration : 1e3, this.minScale = t.minScale !== void 0 ? t.minScale : 0.1, this.maxScale = t.maxScale !== void 0 ? t.maxScale : 14, this;\n  }\n  xDomain(t = void 0, e = !1) {\n    return t === void 0 ? [this._xDomain[0].get(), this._xDomain[1].get()] : (_t(\n      this._xDomain,\n      t,\n      e ? this.animationDuration : 0\n    ), this);\n  }\n  yDomain(t = void 0, e = !1) {\n    return t === void 0 ? [this._yDomain[0].get(), this._yDomain[1].get()] : (_t(\n      this._yDomain,\n      t,\n      e ? this.animationDuration : 0\n    ), this);\n  }\n  xRange(t = void 0, e = !1) {\n    return t === void 0 ? [this._xRange[0].get(), this._xRange[1].get()] : (_t(\n      this._xRange,\n      t,\n      e ? this.animationDuration : 0\n    ), this);\n  }\n  yRange(t = void 0, e = !1) {\n    return t === void 0 ? [this._yRange[0].get(), this._yRange[1].get()] : (_t(\n      this._yRange,\n      t,\n      e ? this.animationDuration : 0\n    ), this);\n  }\n  xDSpan() {\n    return this._xDomain[1].get() - this._xDomain[0].get();\n  }\n  yDSpan() {\n    return this._yDomain[1].get() - this._yDomain[0].get();\n  }\n  xRSpan() {\n    return this._xRange[1].get() - this._xRange[0].get();\n  }\n  yRSpan() {\n    return this._yRange[1].get() - this._yRange[0].get();\n  }\n  /**\n   * Changes the domains of the scales so that the aspect ratio is square.\n   *\n   * @returns this Scales instance\n   */\n  makeSquareAspect() {\n    let t = this.xRSpan() / this.xDSpan(), e = this.yRSpan() / this.yDSpan(), r = this.yDomain(), a = this.xDomain();\n    if (t < e) {\n      let s = (r[0] + r[1]) * 0.5, n = this.yRSpan() / t;\n      this.yDomain([s - n * 0.5, s + n * 0.5]);\n    } else {\n      let s = (a[0] + a[1]) * 0.5, n = this.xRSpan() / e;\n      this.xDomain([s - n * 0.5, s + n * 0.5]);\n    }\n    return this;\n  }\n  onUpdate(t) {\n    return this.listeners.push(t), this;\n  }\n  isNeutral() {\n    return Math.abs(this._xScaleFactor.get() - 1) <= 0.01 && Math.abs(this._yScaleFactor.get() - 1) <= 0.01 && Math.abs(this._translateX.get()) <= 5 && Math.abs(this._translateY.get()) <= 5;\n  }\n  advance(t = void 0) {\n    return this.timeProvider.advance(t), [\n      this._xDomain[0].advance(t),\n      this._xDomain[1].advance(t),\n      this._yDomain[0].advance(t),\n      this._yDomain[1].advance(t),\n      this._xRange[0].advance(t),\n      this._xRange[1].advance(t),\n      this._yRange[0].advance(t),\n      this._yRange[1].advance(t),\n      this._xScaleFactor.advance(t),\n      this._yScaleFactor.advance(t),\n      this._translateX.advance(t),\n      this._translateY.advance(t)\n    ].some((r) => r) ? (this._updatedNoAdvance = !1, this.listeners.forEach((r) => r(this)), !0) : (this._updatedNoAdvance || (this.listeners.forEach((r) => r(this)), this._updatedNoAdvance = !0), !1);\n  }\n  // Increases the scale by the given amount, optionally centering by the given\n  // point in transformed pixel space\n  scaleBy(t, e = null) {\n    this.unfollow();\n    let r = this._translateX.get(), a = this._translateY.get(), s = this._xScaleFactor.get(), n = this._yScaleFactor.get();\n    e ? e = [(e[0] - r) / s, (e[1] - a) / n] : e = [\n      (this.xRange[0] + this.xRange[1]) * 0.5,\n      (this.yRange[0] + this.yRange[1]) * 0.5\n    ];\n    let o = typeof t == \"number\" ? t : t[0], h = typeof t == \"number\" ? t : t[1], l = s + o;\n    return l <= this.maxScale && l >= this.minScale && (this._xScaleFactor.set(l), this._translateX.set(r - o * e[0])), l = n + h, l <= this.maxScale && l >= this.minScale && (this._yScaleFactor.set(l), this._translateY.set(a - h * e[1])), this;\n  }\n  // Translates the scales by the given amount\n  translateBy(t, e) {\n    return this.unfollow(), this._translateX.set(this._translateX.get() + t), this._translateY.set(this._translateY.get() + e), this;\n  }\n  transform(t = void 0, e = !1) {\n    if (t !== void 0) {\n      if (this.unfollow(), e) {\n        let r = (a) => new z(\n          W(a),\n          this.animationDuration,\n          Z\n        );\n        t.kx !== void 0 ? this._xScaleFactor.animate(r(t.kx)) : t.k !== void 0 && this._xScaleFactor.animate(r(t.k)), t.ky !== void 0 ? this._yScaleFactor.animate(r(t.ky)) : t.k !== void 0 && this._yScaleFactor.animate(r(t.k)), t.x !== void 0 && this._translateX.animate(r(t.x)), t.y !== void 0 && this._translateY.animate(r(t.y));\n      } else\n        t.kx !== void 0 ? this._xScaleFactor.set(t.kx) : t.k !== void 0 && this._xScaleFactor.set(t.k), t.ky !== void 0 ? this._yScaleFactor.set(t.ky) : t.k !== void 0 && this._yScaleFactor.set(t.k), t.x !== void 0 && this._translateX.set(t.x), t.y !== void 0 && this._translateY.set(t.y);\n      return this;\n    } else {\n      let r = this._xScaleFactor.last(), a = this._yScaleFactor.last();\n      return {\n        k: (r + a) * 0.5,\n        kx: r,\n        ky: a,\n        x: this._translateX.last(),\n        y: this._translateY.last()\n      };\n    }\n  }\n  /**\n   * Resets the zoom transform to the identity transform.\n   * @param animated Whether to animate the change\n   * @returns this `Scales` instance\n   */\n  reset(t = !1) {\n    return this.transform({ k: 1, x: 0, y: 0 }, t);\n  }\n  /**\n   * Animates or changes the scale and translate factors to change to the\n   * viewport specified by the given controller. The controller is not followed\n   * or saved after the initial transformation.\n   *\n   * @param controller An object specifying the new zoom transform through the\n   *    `transform()` method\n   * @param animated Whether to animate the transition (default `true`)\n   *\n   * @returns this `Scales` instance\n   */\n  zoomTo(t, e = !0) {\n    return this.transform(t.transform(this), e);\n  }\n  _calculateControllerTransform() {\n    this._calculatingTransform = !0;\n    let t = this.controller.transform(this);\n    return this._calculatingTransform = !1, t;\n  }\n  /**\n   * Causes the scales to automatically update whenever the given scales\n   * controller returns a different transform.\n   *\n   * @param controller An object specifying the correct zoom transform at any\n   *    given time\n   * @param animated Whether to animate the initial zoom to the controller's\n   *    value.\n   */\n  follow(t, e = !0) {\n    if (this.controller = t, this._xScaleFactor.set(() => {\n      if (this._calculatingTransform)\n        return this._xScaleFactor.last();\n      let r = this._calculateControllerTransform();\n      return r.kx || r.k;\n    }), this._yScaleFactor.set(() => {\n      if (this._calculatingTransform)\n        return this._yScaleFactor.last();\n      let r = this._calculateControllerTransform();\n      return r.ky || r.k;\n    }), this._translateX.set(() => this._calculatingTransform ? this._translateX.last() : this._calculateControllerTransform().x), this._translateY.set(() => this._calculatingTransform ? this._translateY.last() : this._calculateControllerTransform().y), e) {\n      let r = (a) => new z(\n        Qr(() => a.data()),\n        this.animationDuration,\n        Z\n      );\n      this._xScaleFactor.animate(r(this._xScaleFactor)), this._yScaleFactor.animate(r(this._yScaleFactor)), this._translateX.animate(r(this._translateX)), this._translateY.animate(r(this._translateY));\n    }\n    return this;\n  }\n  /**\n   * Removes the controller that the scales are currently following.\n   *\n   * @returns this `Scales` instance\n   */\n  unfollow() {\n    return this.controller != null && (this._xScaleFactor.set(this._xScaleFactor.get()), this._yScaleFactor.set(this._yScaleFactor.get()), this._translateX.set(this._translateX.get()), this._translateY.set(this._translateY.get())), this.controller = null, this;\n  }\n  /**\n   * Waits until all animations on the scales have finished, then resolves the\n   * promise.\n   */\n  wait(t = !0) {\n    return Promise.all(\n      [\n        ...this._xDomain,\n        ...this._yDomain,\n        ...this._xRange,\n        ...this._yRange,\n        this._xScaleFactor,\n        this._yScaleFactor,\n        this._translateX,\n        this._translateY\n      ].map((e) => e.wait(t))\n    );\n  }\n}\nclass li {\n  /**\n   * @param marks An array of marks to follow.\n   * @param opts Options for the zoom calculation:\n   *  - `centerMark`: The mark to place at the center of the viewport\n   *  - `xAttr`: The attribute name that defines the x coordinate of each mark\n   *    (default `x`). If `transformCoordinates` is `false`, the un-transformed\n   *    value of the attribute will be taken.\n   *  - `yAttr`: The attribute name that defines the y coordinate of each mark\n   *    (default `y`) If `transformCoordinates` is `false`, the un-transformed\n   *    value of the attribute will be taken.\n   *  - `padding`: The amount of padding around the box bounding the given marks\n   *    to include in the zoom transform.\n   *  - `transformCoordinates`: Whether or not to transform the coordinates using\n   *    the x/y attributes' transform functions. Typically if using the Scales\n   *    to perform the transformation, you will want to keep this value at its\n   *    default of `false`. Running the transform function while computing the\n   *    scale transforms can lead to infinite recursions. Only set this to true\n   *    if you are using the `Scales` outside of the main `Attribute` value\n   *    calculation and transformation pipeline.\n   */\n  constructor(t, e = {}) {\n    this.lastCompute = void 0, this.marks = t, this.centerMark = e.centerMark !== void 0 ? e.centerMark : void 0, this.centerMark && !this.marks.includes(this.centerMark) && (this.marks = [...this.marks, this.centerMark]), this.xAttr = e.xAttr !== void 0 ? e.xAttr : \"x\", this.yAttr = e.yAttr !== void 0 ? e.yAttr : \"y\", this.padding = e.padding !== void 0 ? e.padding : 20, this.transformCoordinates = e.transformCoordinates ?? !1, this.inverseTransformCoordinates = e.inverseTransformCoordinates ?? !1;\n  }\n  transform(t) {\n    if (this.lastCompute && this.lastCompute.scales === t && this.lastCompute.time == t.timeProvider())\n      return this.lastCompute.result;\n    let e = this.marks.map((k) => this._getMarkLocation(t, k)), r, a, s, n, o = this.centerMark !== void 0 ? this._getMarkLocation(t, this.centerMark) : null, h = t.transform(), { x: l, y: u } = bi(e);\n    if (o) {\n      let k = Math.max(\n        l[1] - o.x,\n        o.x - l[0]\n      ), w = Math.max(\n        u[1] - o.y,\n        o.y - u[0]\n      );\n      l = [o.x - k, o.x + k], u = [o.y - w, o.y + w];\n    }\n    let c, d;\n    Math.abs(l[1] - l[0]) > 0 ? c = (Math.abs(t.xRSpan()) - this.padding * 2) / (l[1] - l[0]) / (Math.abs(t.xRSpan()) / Math.abs(t.xDSpan())) : c = h.kx, Math.abs(u[1] - u[0]) > 0 ? d = (Math.abs(t.yRSpan()) - this.padding * 2) / (u[1] - u[0]) / (Math.abs(t.yRSpan()) / Math.abs(t.yDSpan())) : d = h.ky;\n    let m = h.ky / h.kx;\n    c = Math.min(c, t.maxScale), d = Math.min(d, t.maxScale), d < c * m ? (s = d / m, n = d) : (s = c, n = c * m), r = (l[0] + l[1]) * 0.5, a = (u[0] + u[1]) * 0.5, r = (r - t.xDomain()[0]) * t.xRSpan() / t.xDSpan() + t.xRange()[0], a = (a - t.yDomain()[0]) * t.yRSpan() / t.yDSpan() + t.yRange()[0];\n    let p = -r * s + (t.xRange()[0] + t.xRange()[1]) * 0.5, y = -a * n + (t.yRange()[0] + t.yRange()[1]) * 0.5, b = {\n      kx: s,\n      ky: n,\n      x: p,\n      y\n    };\n    return this.lastCompute = { scales: t, time: t.timeProvider(), result: b }, b;\n  }\n  _getMarkLocation(t, e) {\n    let r = {\n      x: e.attr(this.xAttr, this.transformCoordinates),\n      y: e.attr(this.yAttr, this.transformCoordinates)\n    };\n    return this.inverseTransformCoordinates && (r = {\n      x: t.xScale.invert(r.x),\n      y: t.yScale.invert(r.y)\n    }), r;\n  }\n}\nfunction ga(i, t = {}) {\n  return new li([i], { centerMark: i, ...t });\n}\nfunction pa(i, t = {}) {\n  return new li(i, { ...t });\n}\nclass _a {\n  constructor(t = {}) {\n    this.markCollections = [], this._positionMap = null, this._binSizes = null, this._extents = null, this._numBins = null, this._numMarks = null, this._avgMarksPerBin = null, this._coordinateAttributes = t.coordinateAttributes ?? [\"x\", \"y\"], this._transformCoordinates = t.transformCoordinates ?? !0, this._avgMarksPerBin = t.marksPerBin ?? null, this._maximumHitTestDistance = t.maximumHitTestDistance ?? 1e12;\n  }\n  /**\n   * Adds a mark collection to the position map so that the coordinates of the\n   * marks it contains will be tracked, and its marks can be returned by\n   * `{@link marksNear}`.\n   *\n   * @param markCollection A collection of marks, such as a render group, a\n   *  single mark, an array of marks, or a function returning a mark or array of\n   *  marks.\n   * @returns this `PositionMap` instance\n   */\n  add(t) {\n    return this.markCollections.push(t), this;\n  }\n  /**\n   * Removes a mark collection from the position map.\n   *\n   * @param markCollection The collection to remove (must be identical by ===\n   *  to the mark collection that was originally added)\n   * @returns This `PositionMap` instance\n   */\n  remove(t) {\n    let e = this.markCollections.indexOf(t);\n    return e < 0 && console.error(\n      \"Tried to remove mark collection which does not exist:\",\n      t\n    ), this.markCollections.splice(e, 1), this;\n  }\n  /**\n   * Notifies the position map that positions have changed and the mark positions\n   * need to be recalculated. This does not recalculate the positions immediately.\n   *\n   * @returns this `PositionMap` instance\n   */\n  invalidate() {\n    return this._positionMap = null, this._binSizes = null, this._extents = null, this._numBins = null, this._numMarks = null, this;\n  }\n  /**\n   * Retrieves the mark positions and produces the internal representation to\n   * calculate distances. This method should most likely not be called by user\n   * code, as it will automatically be called when `marksNear` is called.\n   *\n   * @returns this `PositionMap` instance\n   */\n  compute() {\n    return this._extents = new Array(this._coordinateAttributes.length).fill(0).map((t) => [1e12, -1e12]), this._numMarks = 0, this._forEachMark((t) => {\n      this._coordinateAttributes.forEach((e, r) => {\n        let a = t.attr(e, this._transformCoordinates);\n        a < this._extents[r][0] && (this._extents[r][0] = a), a > this._extents[r][1] && (this._extents[r][1] = a);\n      }), this._numMarks += 1;\n    }), this._extents.forEach((t, e) => {\n      t[0] == t[1] ? this._extents[e] = [t[0], t[1] + 1] : this._extents[e] = [t[0], t[1] + (t[1] - t[0]) * 0.01];\n    }), this._numMarks == 0 ? this : (this._numBins = Math.round(\n      this._numMarks / (this._avgMarksPerBin ?? Math.min(Math.max(1, this._numMarks / 100), 10))\n    ), this._binSizes = this._extents.map(\n      (t) => Math.ceil((t[1] - t[0]) / this._numBins)\n    ), this._positionMap = /* @__PURE__ */ new Map(), this._forEachMark((t) => {\n      let e = this._coordinateAttributes.map(\n        (a) => t.attr(a, this._transformCoordinates)\n      ), r = this._getPositionID(e);\n      this._positionMap.has(r) ? this._positionMap.get(r).push(t) : this._positionMap.set(r, [t]);\n    }), this);\n  }\n  _forEachMark(t) {\n    this.markCollections.forEach((e) => {\n      if (e instanceof ra)\n        e.forEach(t);\n      else if (e instanceof G)\n        t(e);\n      else if (typeof e.forEach == \"function\")\n        e.forEach(t);\n      else if (typeof e == \"function\") {\n        let r = e();\n        r instanceof G ? t(r) : r.forEach(t);\n      } else\n        console.error(\n          \"Unrecognized mark collection type in position map:\",\n          e\n        );\n    });\n  }\n  _getPositionID(t) {\n    return (this._numBins === null || !this._extents || !this._binSizes) && console.error(\"Cannot hash position without computing first\"), t.length != this._coordinateAttributes.length && console.error(\n      `Need exactly ${this._coordinateAttributes.length} coordinates, got ${t.length}`\n    ), t.reduce(\n      (e, r, a) => e * this._numBins + Math.floor((r - this._extents[a][0]) / this._binSizes[a]),\n      0\n    );\n  }\n  /**\n   * Retrieves all marks that are within the given distance of the given set of\n   * coordinates.\n   *\n   * @param location The coordinates of a point to search by.\n   * @param distance The maximum Euclidean distance allowed for points to be\n   *  included in the results.\n   * @param exact If `false`, return a list of candidates that is guaranteed to\n   *  include all points within `distance` of `location`, but may include some\n   *  false positives.\n   *\n   * @returns a list of marks whose coordinates are within `distance` of `location`,\n   *  as well as potentially some false positives if `exact` is set to `false`.\n   *  If `exact` is `true`, the returned array is sorted by Euclidean distance.\n   */\n  marksNear(t, e, r = !0) {\n    if (this._positionMap || this.compute(), this._numMarks == 0)\n      return [];\n    let a = this._recursiveBinWalk(t, e);\n    return r ? a.map((n) => {\n      let o = this._coordinateAttributes.map(\n        (h) => n.attr(h, this._transformCoordinates)\n      );\n      return [\n        n,\n        Math.sqrt(\n          o.reduce(\n            (h, l, u) => h + (l - t[u]) * (l - t[u]),\n            0\n          )\n        )\n      ];\n    }).filter(([n, o]) => o <= e).sort((n, o) => n[1] - o[1]).map(([n, o]) => n) : a;\n  }\n  _recursiveBinWalk(t, e, r = [], a = {}) {\n    let s = r.length;\n    if (s == t.length)\n      return this._positionMap.get(this._getPositionID(r)) ?? [];\n    let n = a.distanceInBins ? e : Math.ceil(e / this._binSizes[s]), o = (a.outerOnly && r.length == this._binSizes.length - 1 ? [-n, n] : new Array(n * 2 + 1).fill(0).map((l, u) => u - n)).map((l) => l * this._binSizes[s] + t[s]).filter(\n      (l) => l >= this._extents[s][0] && l <= this._extents[s][1]\n    ), h = [];\n    return o.forEach((l, u) => {\n      h = [\n        ...h,\n        ...this._recursiveBinWalk(\n          t,\n          e,\n          [...r, l],\n          {\n            ...a,\n            outerOnly: a.outerOnly && u > 0 && u < o.length - 1\n          }\n        )\n      ];\n    }), h;\n  }\n  /**\n   * Performs a hit-test near the given coordinates and returns the first mark\n   * that returns true according to the mark's `hitTest` function.\n   *\n   * @param location the coordinates to perform a hit-test near\n   * @param maximumDistance the maximum distance to search within before stopping\n   *\n   * @returns the first Mark whose hit-test returns true for the given location,\n   *  or null if none do.\n   */\n  hitTest(t, e = null) {\n    if (this._positionMap || this.compute(), this._numMarks == 0)\n      return null;\n    e == null && (e = this._maximumHitTestDistance);\n    let r = this._binSizes.reduce(\n      (a, s) => Math.min(\n        this._numBins,\n        Math.floor(Math.max(a, e / s))\n      ),\n      0\n    ) + 1;\n    for (let a = 0; a < r; a++) {\n      let s = this._recursiveBinWalk(t, a, [], {\n        outerOnly: !0,\n        distanceInBins: !0\n      });\n      if (s.length == 0)\n        continue;\n      let o = s.map((h) => {\n        let l = this._coordinateAttributes.map(\n          (u) => h.attr(u, this._transformCoordinates)\n        );\n        return [\n          h,\n          Math.sqrt(\n            l.reduce(\n              (u, c, d) => u + (c - t[d]) * (c - t[d]),\n              0\n            )\n          )\n        ];\n      }).filter(([h, l]) => l <= e).sort((h, l) => h[1] - l[1]).map(([h, l]) => h);\n      for (let h of o)\n        if (h.hitTest(t))\n          return h;\n    }\n    return null;\n  }\n  /**\n   * Performs a hit-test at the given location and dispatches an event to the mark\n   * closest to it, if it exists.\n   *\n   * @param location the location at which to fire the event\n   * @param eventName the event type to dispatch\n   * @param details an optional object representing information about the event\n   * @returns the mark that received the event, or null if no mark was found\n   */\n  dispatchAt(t, e, r = void 0) {\n    let a = this.hitTest(t);\n    return a && a.dispatch(e, r), a;\n  }\n}\nvar sa = /* @__PURE__ */ ((i) => (i.none = \"no-preference\", i.more = \"more\", i.less = \"less\", i))(sa || {}), na = /* @__PURE__ */ ((i) => (i.light = \"light\", i.dark = \"dark\", i))(na || {});\nclass oa {\n  constructor() {\n    this._hasChanged = !1;\n    let t = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n    this._prefersReducedMotion = t.matches, t.addEventListener(\"change\", (h) => this._handleMotion(h));\n    let e = window.matchMedia(\n      \"(prefers-reduced-transparency: reduce)\"\n    );\n    this._prefersReducedTransparency = e.matches, e.addEventListener(\n      \"change\",\n      (h) => this._handleTransparency(h)\n    );\n    let r = window.matchMedia(\"(prefers-contrast: none)\");\n    this._contrastPreference = \"no-preference\", r.addEventListener(\"change\", (h) => this._handleContrastNone(h));\n    let a = window.matchMedia(\"(prefers-contrast: more)\");\n    a.matches && (this._contrastPreference = \"more\"), a.addEventListener(\"change\", (h) => this._handleContrastMore(h));\n    let s = window.matchMedia(\"(prefers-contrast: less)\");\n    a.matches && (this._contrastPreference = \"less\"), s.addEventListener(\"change\", (h) => this._handleContrastLess(h));\n    let n = window.matchMedia(\"(prefers-color-scheme: light)\");\n    this._colorSchemePreference = \"light\", n.addEventListener(\n      \"change\",\n      (h) => this._handleColorSchemeLight(h)\n    );\n    let o = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    o.matches && (this._colorSchemePreference = \"dark\"), o.addEventListener(\"change\", (h) => this._handleColorSchemeDark(h));\n  }\n  _handleMotion(t) {\n    this._prefersReducedMotion = t.matches, this._hasChanged = !0;\n  }\n  _handleTransparency(t) {\n    this._prefersReducedTransparency = t.matches, this._hasChanged = !0;\n  }\n  _handleContrastMore(t) {\n    t.matches && (this._contrastPreference = \"more\"), this._hasChanged = !0;\n  }\n  _handleContrastLess(t) {\n    t.matches && (this._contrastPreference = \"less\"), this._hasChanged = !0;\n  }\n  _handleContrastNone(t) {\n    t.matches && (this._contrastPreference = \"no-preference\"), this._hasChanged = !0;\n  }\n  _handleColorSchemeLight(t) {\n    t.matches && (this._colorSchemePreference = \"light\"), this._hasChanged = !0;\n  }\n  _handleColorSchemeDark(t) {\n    t.matches && (this._colorSchemePreference = \"dark\"), this._hasChanged = !0;\n  }\n  get prefersReducedMotion() {\n    return this._prefersReducedMotion;\n  }\n  get prefersReducedTransparency() {\n    return this._prefersReducedTransparency;\n  }\n  get contrastPreference() {\n    return this._contrastPreference;\n  }\n  get colorSchemePreference() {\n    return this._colorSchemePreference;\n  }\n  advance(t) {\n    return this._hasChanged ? (this._hasChanged = !1, !0) : !1;\n  }\n}\nlet Ot;\nfunction ya() {\n  return Ot || (Ot = new oa()), Ot;\n}\nexport {\n  z as Animator,\n  M as Attribute,\n  Mi as AttributeRecompute,\n  na as ColorSchemePreference,\n  sa as ContrastPreference,\n  fa as LazyTicker,\n  G as Mark,\n  li as MarkFollower,\n  ra as MarkRenderGroup,\n  _a as PositionMap,\n  oa as RenderContext,\n  ma as Scales,\n  ia as StageManager,\n  ea as StagingAction,\n  ta as StagingState,\n  da as Ticker,\n  Ht as autoMixingFunction,\n  ua as basicAnimationTo,\n  ga as centerOn,\n  Nr as colorMixingFunction,\n  Z as curveEaseInOut,\n  oi as curveLinear,\n  ca as defineMark,\n  ya as getRenderContext,\n  la as interpolateAlongPath,\n  W as interpolateTo,\n  Qr as interpolateToFunction,\n  pa as markBox,\n  Jr as numericalArrayMixingFunction,\n  hi as numericalMixingFunction\n};\n"],
  "mappings": "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",
  "names": ["C"]
}
